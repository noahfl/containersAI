
--------------------------SPASS-START-----------------------------
Input Problem:
1[0:Inp] ||  -> RigidObject(skc6)*.
2[0:Inp] ||  -> Ordered(skc4,skc5)*.
3[0:Inp] ||  -> CContained(skc4,skc7,Singleton(skc6))*.
4[0:Inp] || RigidObject(U) -> Object(U)*.
5[0:Inp] || RigidHistory(U) -> History(U)*.
6[0:Inp] || CContained(skc5,skc7,Singleton(skc6))* -> .
7[0:Inp] || Lt(U,V)* -> Time(U).
8[0:Inp] || Lt(U,V)* -> Time(V).
9[0:Inp] || Leq(U,V)* -> Time(U).
10[0:Inp] || Leq(U,V)* -> Time(V).
11[0:Inp] || Ordered(U,V)* -> Time(U).
12[0:Inp] || Ordered(U,V)* -> Time(V).
13[0:Inp] || SkP0(U,V)* -> Region(V).
14[0:Inp] || SkP0(U,V)* -> Region(U).
15[0:Inp] || SkP1(U,V)* -> Region(V).
16[0:Inp] || SkP1(U,V)* -> Region(U).
17[0:Inp] || Object(U) -> ObjectSet(Singleton(U))*.
18[0:Inp] || Object(U) -> History(HPlace(U))*.
19[0:Inp] || Leq3(U,V,W)* -> Time(U).
20[0:Inp] || Leq3(U,V,W)* -> Time(V).
21[0:Inp] || Leq3(U,V,W)* -> Time(W).
22[0:Inp] || P(U,V) -> SkP0(V,U)*.
23[0:Inp] || O(U,V) -> SkP0(V,U)*.
24[0:Inp] || EC(U,V) -> SkP0(V,U)*.
25[0:Inp] || DR(U,V) -> SkP0(V,U)*.
26[0:Inp] || Cavity(U,V) -> SkP1(V,U)*.
27[0:Inp] || Outside(U,V) -> SkP1(V,U)*.
28[0:Inp] || OSPlace(U,V,W)* -> Time(U).
29[0:Inp] || OSPlace(U,V,W)* -> ObjectSet(V).
30[0:Inp] || OSPlace(U,V,W)* -> Region(W).
31[0:Inp] || ClosedContainer(U,V,W)* -> Time(U).
32[0:Inp] || ClosedContainer(U,V,W)* -> ObjectSet(V).
33[0:Inp] || ClosedContainer(U,V,W)* -> Region(W).
34[0:Inp] || CContained(U,V,W)* -> Time(U).
35[0:Inp] || CContained(U,V,W)* -> Object(V).
36[0:Inp] || CContained(U,V,W)* -> ObjectSet(W).
37[0:Inp] || Region(U) Region(V) -> Region(RUnion(U,V))*.
38[0:Inp] || Time(U) Object(V) -> Region(Place(U,V))*.
39[0:Inp] || Time(U) History(V) -> Region(Slice(U,V))*.
40[0:Inp] || Lt(U,V) Time(U) Time(V) -> Leq(U,V)*.
41[0:Inp] || equal(U,V) Time(U) Time(V) -> Leq(U,V)*.
42[0:Inp] || Leq(U,V)* Time(U) Time(V) -> Ordered(U,V).
43[0:Inp] || Leq(U,V)* Time(V) Time(U) -> Ordered(V,U).
44[0:Inp] || Leq(U,V)* Time(U) Time(V) -> Lt(U,V) equal(U,V).
45[0:Inp] || Ordered(U,V) Time(U) Time(V) -> Leq(U,V)* Leq(V,U)*.
46[0:Inp] || CContained(U,V,Singleton(W))* RigidObject(W) Lt(U,X)* -> CContained(X,V,Singleton(W))*.
47[0:Inp] || CContained(U,V,Singleton(W))* RigidObject(W) Lt(X,U)* -> CContained(X,V,Singleton(W))*.
 This is a first-order Non-Horn problem containing equality.
 This is a problem that contains sort information.
 All equations are many sorted.
 The conjecture is ground.
 The following monadic predicates have finite extensions: RigidObject.
 Axiom clauses: 43 Conjecture clauses: 4
 Inferences: IEmS=1 ISoR=1 IEqR=1 IEqF=1 ISpR=1 ISpL=1 IORe=1 IOFc=1 
 Reductions: RFRew=1 RBRew=1 RFMRR=1 RBMRR=1 RObv=1 RUnC=1 RTaut=1 RSST=1 RSSi=1 RFSub=1 RBSub=1 RAED=1 RCon=1 
 Extras    : Input Saturation, Dynamic Selection, Full Splitting, Full Reduction,  Ratio: 5, FuncWeight: 1, VarWeight: 1
 Precedence: Slice > Place > RUnion > HPlace > Singleton > ObjectSet > Region > History > Object > Leq > Lt > Ordered > CContained > Time > RigidObject > Contained > Leq3 > SkP0 > P > SkP1 > Cavity > OSPlace > ClosedContainer > RigidHistory > O > EC > DR > Outside > skc7 > skc6 > skc5 > skc4 > skc3 > skc2 > skc1 > skc0 > Tb2 > Ta2 > Ob2b > Ob2a > Os2
 Ordering  : KBO
Processed Problem:

Worked Off Clauses:

Usable Clauses:
1[0:Inp] ||  -> RigidObject(skc6)*.
55[0:Res:1.0,4.0] ||  -> Object(skc6)*.
62[0:Res:3.0,35.0] ||  -> Object(skc7)*.
57[0:Res:2.0,11.0] ||  -> Time(skc4)*.
58[0:Res:2.0,12.0] ||  -> Time(skc5)*.
2[0:Inp] ||  -> Ordered(skc4,skc5)*.
63[0:Res:3.0,36.0] ||  -> ObjectSet(Singleton(skc6))*.
70[0:Res:3.0,69.0] || Lt(skc5,skc4)* -> .
71[0:Res:3.0,68.0] || Lt(skc4,skc5)* -> .
3[0:Inp] ||  -> CContained(skc4,skc7,Singleton(skc6))*.
5[0:Inp] RigidHistory(U) ||  -> History(U)*.
4[0:Inp] RigidObject(U) ||  -> Object(U)*.
6[0:Inp] || CContained(skc5,skc7,Singleton(skc6))* -> .
18[0:Inp] Object(U) ||  -> History(HPlace(U))*.
17[0:Inp] Object(U) ||  -> ObjectSet(Singleton(U))*.
16[0:Inp] || SkP1(U,V)* -> Region(U).
15[0:Inp] || SkP1(U,V)* -> Region(V).
14[0:Inp] || SkP0(U,V)* -> Region(U).
13[0:Inp] || SkP0(U,V)* -> Region(V).
12[0:Inp] || Ordered(U,V)* -> Time(V).
11[0:Inp] || Ordered(U,V)* -> Time(U).
10[0:Inp] || Leq(U,V)* -> Time(V).
9[0:Inp] || Leq(U,V)* -> Time(U).
8[0:Inp] || Lt(U,V)* -> Time(V).
7[0:Inp] || Lt(U,V)* -> Time(U).
56[0:Res:2.0,51.0] ||  -> Leq(skc5,skc4)* Leq(skc4,skc5).
27[0:Inp] || Outside(U,V) -> SkP1(V,U)*.
26[0:Inp] || Cavity(U,V) -> SkP1(V,U)*.
25[0:Inp] || DR(U,V) -> SkP0(V,U)*.
24[0:Inp] || EC(U,V) -> SkP0(V,U)*.
23[0:Inp] || O(U,V) -> SkP0(V,U)*.
22[0:Inp] || P(U,V) -> SkP0(V,U)*.
48[0:MRR:43.0,43.1,10.1,9.1] || Leq(U,V)* -> Ordered(V,U).
49[0:MRR:42.0,42.1,9.1,10.1] || Leq(U,V)* -> Ordered(U,V).
50[0:MRR:40.0,40.1,7.1,8.1] || Lt(U,V) -> Leq(U,V)*.
32[0:Inp] || ClosedContainer(U,V,W)* -> ObjectSet(V).
29[0:Inp] || OSPlace(U,V,W)* -> ObjectSet(V).
36[0:Inp] || CContained(U,V,W)* -> ObjectSet(W).
35[0:Inp] || CContained(U,V,W)* -> Object(V).
33[0:Inp] || ClosedContainer(U,V,W)* -> Region(W).
30[0:Inp] || OSPlace(U,V,W)* -> Region(W).
31[0:Inp] || ClosedContainer(U,V,W)* -> Time(U).
28[0:Inp] || OSPlace(U,V,W)* -> Time(U).
21[0:Inp] || Leq3(U,V,W)* -> Time(W).
20[0:Inp] || Leq3(U,V,W)* -> Time(V).
19[0:Inp] || Leq3(U,V,W)* -> Time(U).
34[0:Inp] || CContained(U,V,W)* -> Time(U).
66[0:MRR:59.0,1.0] || Lt(skc4,U) -> CContained(U,skc7,Singleton(skc6))*.
67[0:MRR:60.0,1.0] || Lt(U,skc4) -> CContained(U,skc7,Singleton(skc6))*.
37[0:Inp] Region(U) Region(V) ||  -> Region(RUnion(V,U))*.
39[0:Inp] History(U) Time(V) ||  -> Region(Slice(V,U))*.
38[0:Inp] Object(U) Time(V) ||  -> Region(Place(V,U))*.
51[0:MRR:45.0,45.1,11.1,12.1] || Ordered(U,V) -> Leq(V,U)* Leq(U,V)*.
52[0:MRR:44.0,44.1,9.1,10.1] || Leq(U,V)* -> equal(U,V) Lt(U,V).
69[0:MRR:65.0,1.0] || Lt(skc5,U) CContained(U,skc7,Singleton(skc6))* -> .
68[0:MRR:64.0,1.0] || Lt(U,skc5) CContained(U,skc7,Singleton(skc6))* -> .
41[0:Inp] Time(U) Time(V) || equal(V,U) -> Leq(V,U)*.
53[0:Res:1.0,46.0] || Lt(U,V)* CContained(U,W,Singleton(skc6))* -> CContained(V,W,Singleton(skc6))*.
54[0:Res:1.0,47.0] || Lt(U,V)* CContained(V,W,Singleton(skc6))* -> CContained(U,W,Singleton(skc6))*.
47[0:Inp] RigidObject(U) || Lt(V,W)* CContained(W,X,Singleton(U))* -> CContained(V,X,Singleton(U))*.
46[0:Inp] RigidObject(U) || Lt(V,W)* CContained(V,X,Singleton(U))* -> CContained(W,X,Singleton(U))*.
	Given clause: 1[0:Inp] ||  -> RigidObject(skc6)*.
	Given clause: 55[0:Res:1.0,4.0] ||  -> Object(skc6)*.
	Given clause: 62[0:Res:3.0,35.0] ||  -> Object(skc7)*.
	Given clause: 57[0:Res:2.0,11.0] ||  -> Time(skc4)*.
	Given clause: 2[0:Inp] ||  -> Ordered(skc4,skc5)*.
	Given clause: 58[0:Res:2.0,12.0] ||  -> Time(skc5)*.
	Given clause: 63[0:Res:3.0,36.0] ||  -> ObjectSet(Singleton(skc6))*.
	Given clause: 70[0:Res:3.0,69.0] || Lt(skc5,skc4)* -> .
	Given clause: 71[0:Res:3.0,68.0] || Lt(skc4,skc5)* -> .
	Given clause: 3[0:Inp] ||  -> CContained(skc4,skc7,Singleton(skc6))*.
	Given clause: 5[0:Inp] RigidHistory(U) ||  -> History(U)*.
	Given clause: 4[0:Inp] RigidObject(U) ||  -> Object(U)*.
	Given clause: 6[0:Inp] || CContained(skc5,skc7,Singleton(skc6))* -> .
	Given clause: 56[0:Res:2.0,51.0] ||  -> Leq(skc5,skc4)* Leq(skc4,skc5).
	Given clause: 18[0:Inp] Object(U) ||  -> History(HPlace(U))*.
	Given clause: 17[0:Inp] Object(U) ||  -> ObjectSet(Singleton(U))*.
	Given clause: 16[0:Inp] || SkP1(U,V)* -> Region(U).
	Given clause: 15[0:Inp] || SkP1(U,V)* -> Region(V).
	Given clause: 14[0:Inp] || SkP0(U,V)* -> Region(U).
	Given clause: 13[0:Inp] || SkP0(U,V)* -> Region(V).
	Given clause: 12[0:Inp] || Ordered(U,V)* -> Time(V).
	Given clause: 11[0:Inp] || Ordered(U,V)* -> Time(U).
	Given clause: 10[0:Inp] || Leq(U,V)* -> Time(V).
	Given clause: 9[0:Inp] || Leq(U,V)* -> Time(U).
	Given clause: 8[0:Inp] || Lt(U,V)* -> Time(V).
	Given clause: 7[0:Inp] || Lt(U,V)* -> Time(U).
	Given clause: 27[0:Inp] || Outside(U,V) -> SkP1(V,U)*.
	Given clause: 117[0:Res:27.1,15.0] || Outside(U,V)* -> Region(U).
	Given clause: 118[0:Res:27.1,16.0] || Outside(U,V)* -> Region(V).
	Given clause: 26[0:Inp] || Cavity(U,V) -> SkP1(V,U)*.
	Given clause: 119[0:Res:26.1,15.0] || Cavity(U,V)* -> Region(U).
	Given clause: 120[0:Res:26.1,16.0] || Cavity(U,V)* -> Region(V).
	Given clause: 25[0:Inp] || DR(U,V) -> SkP0(V,U)*.
	Given clause: 121[0:Res:25.1,13.0] || DR(U,V)* -> Region(U).
	Given clause: 24[0:Inp] || EC(U,V) -> SkP0(V,U)*.
	Given clause: 122[0:Res:25.1,14.0] || DR(U,V)* -> Region(V).
	Given clause: 123[0:Res:24.1,13.0] || EC(U,V)* -> Region(U).
	Given clause: 124[0:Res:24.1,14.0] || EC(U,V)* -> Region(V).
	Given clause: 23[0:Inp] || O(U,V) -> SkP0(V,U)*.
	Given clause: 22[0:Inp] || P(U,V) -> SkP0(V,U)*.
	Given clause: 125[0:Res:23.1,13.0] || O(U,V)* -> Region(U).
	Given clause: 126[0:Res:23.1,14.0] || O(U,V)* -> Region(V).
	Given clause: 127[0:Res:22.1,13.0] || P(U,V)* -> Region(U).
	Given clause: 128[0:Res:22.1,14.0] || P(U,V)* -> Region(V).
	Given clause: 48[0:MRR:43.0,43.1,10.1,9.1] || Leq(U,V)* -> Ordered(V,U).
	Given clause: 49[0:MRR:42.0,42.1,9.1,10.1] || Leq(U,V)* -> Ordered(U,V).
	Given clause: 131[0:MRR:130.0,48.0] ||  -> Ordered(skc5,skc4)*.
	Given clause: 50[0:MRR:40.0,40.1,7.1,8.1] || Lt(U,V) -> Leq(U,V)*.
	Given clause: 32[0:Inp] || ClosedContainer(U,V,W)* -> ObjectSet(V).
	Given clause: 29[0:Inp] || OSPlace(U,V,W)* -> ObjectSet(V).
	Given clause: 36[0:Inp] || CContained(U,V,W)* -> ObjectSet(W).
	Given clause: 35[0:Inp] || CContained(U,V,W)* -> Object(V).
	Given clause: 33[0:Inp] || ClosedContainer(U,V,W)* -> Region(W).
	Given clause: 30[0:Inp] || OSPlace(U,V,W)* -> Region(W).
	Given clause: 31[0:Inp] || ClosedContainer(U,V,W)* -> Time(U).
	Given clause: 28[0:Inp] || OSPlace(U,V,W)* -> Time(U).
	Given clause: 21[0:Inp] || Leq3(U,V,W)* -> Time(W).
	Given clause: 20[0:Inp] || Leq3(U,V,W)* -> Time(V).
	Given clause: 19[0:Inp] || Leq3(U,V,W)* -> Time(U).
	Given clause: 34[0:Inp] || CContained(U,V,W)* -> Time(U).
	Given clause: 134[0:Res:50.1,49.0] || Lt(U,V)* -> Ordered(U,V).
	Given clause: 135[0:Res:50.1,48.0] || Lt(U,V)* -> Ordered(V,U).
	Given clause: 66[0:MRR:59.0,1.0] || Lt(skc4,U) -> CContained(U,skc7,Singleton(skc6))*.
	Given clause: 67[0:MRR:60.0,1.0] || Lt(U,skc4) -> CContained(U,skc7,Singleton(skc6))*.
	Given clause: 37[0:Inp] Region(U) Region(V) ||  -> Region(RUnion(V,U))*.
	Given clause: 69[0:MRR:65.0,1.0] || Lt(skc5,U) CContained(U,skc7,Singleton(skc6))* -> .
	Given clause: 150[0:Res:67.1,69.1] || Lt(U,skc4)*+ Lt(skc5,U)* -> .
	Given clause: 151[0:Res:66.1,69.1] || Lt(skc4,U) Lt(skc5,U)* -> .
	Given clause: 68[0:MRR:64.0,1.0] || Lt(U,skc5) CContained(U,skc7,Singleton(skc6))* -> .
	Given clause: 39[0:Inp] History(U) Time(V) ||  -> Region(Slice(V,U))*.
	Given clause: 153[0:Res:67.1,68.1] || Lt(U,skc4) Lt(U,skc5)* -> .
	Given clause: 154[0:Res:66.1,68.1] || Lt(skc4,U)*+ Lt(U,skc5)* -> .
	Given clause: 38[0:Inp] Object(U) Time(V) ||  -> Region(Place(V,U))*.
	Given clause: 51[0:MRR:45.0,45.1,11.1,12.1] || Ordered(U,V)+ -> Leq(V,U)* Leq(U,V)*.
	Given clause: 52[0:MRR:44.0,44.1,9.1,10.1] || Leq(U,V)* -> equal(U,V) Lt(U,V).
	Given clause: 159[0:MRR:157.2,70.0] ||  -> Leq(skc4,skc5)* equal(skc5,skc4).
	Given clause: 180[1:Spt:175.0,159.0] ||  -> Leq(skc4,skc5)*.
SPASS V 3.5 
SPASS beiseite: Proof found.
Problem: inference2e.dfg 
SPASS derived 86 clauses, backtracked 17 clauses, performed 1 splits and kept 106 clauses.
SPASS allocated 55452 KBytes.
SPASS spent	0:00:00.07 on the problem.
		0:00:00.02 for the input.
		0:00:00.02 for the FLOTTER CNF translation.
		0:00:00.00 for inferences.
		0:00:00.00 for the backtracking.
		0:00:00.00 for the reduction.


Here is a proof with depth 4, length 30 :
1[0:Inp] ||  -> RigidObject(skc6)*.
2[0:Inp] ||  -> Ordered(skc4,skc5)*.
3[0:Inp] ||  -> CContained(skc4,skc7,Singleton(skc6))*.
6[0:Inp] || CContained(skc5,skc7,Singleton(skc6))* -> .
9[0:Inp] || Leq(U,V)* -> Time(U).
10[0:Inp] || Leq(U,V)* -> Time(V).
11[0:Inp] || Ordered(U,V)* -> Time(U).
12[0:Inp] || Ordered(U,V)* -> Time(V).
44[0:Inp] Time(U) Time(V) || Leq(U,V)* -> Lt(U,V) equal(U,V).
45[0:Inp] Time(U) Time(V) || Ordered(U,V) -> Leq(U,V)* Leq(V,U)*.
46[0:Inp] RigidObject(U) || Lt(V,W)* CContained(V,X,Singleton(U))* -> CContained(W,X,Singleton(U))*.
47[0:Inp] RigidObject(U) || Lt(V,W)* CContained(W,X,Singleton(U))* -> CContained(V,X,Singleton(U))*.
51[0:MRR:45.0,45.1,11.1,12.1] || Ordered(U,V)+ -> Leq(V,U)* Leq(U,V)*.
52[0:MRR:44.0,44.1,9.1,10.1] || Leq(U,V)* -> equal(U,V) Lt(U,V).
56[0:Res:2.0,51.0] ||  -> Leq(skc5,skc4)* Leq(skc4,skc5).
64[0:Res:46.3,6.0] RigidObject(skc6) || CContained(U,skc7,Singleton(skc6))* Lt(U,skc5) -> .
65[0:Res:47.3,6.0] RigidObject(skc6) || CContained(U,skc7,Singleton(skc6))* Lt(skc5,U) -> .
68[0:MRR:64.0,1.0] || Lt(U,skc5) CContained(U,skc7,Singleton(skc6))* -> .
69[0:MRR:65.0,1.0] || Lt(skc5,U) CContained(U,skc7,Singleton(skc6))* -> .
70[0:Res:3.0,69.0] || Lt(skc5,skc4)* -> .
71[0:Res:3.0,68.0] || Lt(skc4,skc5)* -> .
157[0:Res:56.0,52.0] ||  -> Leq(skc4,skc5)* equal(skc5,skc4) Lt(skc5,skc4).
159[0:MRR:157.2,70.0] ||  -> Leq(skc4,skc5)* equal(skc5,skc4).
161[1:Spt:159.1] ||  -> equal(skc5,skc4)**.
166[1:Rew:161.0,6.0] || CContained(skc4,skc7,Singleton(skc6))* -> .
175[1:MRR:166.0,3.0] ||  -> .
179[1:Spt:175.0,159.1,161.0] || equal(skc5,skc4)** -> .
180[1:Spt:175.0,159.0] ||  -> Leq(skc4,skc5)*.
181[1:Res:180.0,52.0] ||  -> equal(skc5,skc4) Lt(skc4,skc5)*.
186[1:MRR:181.0,181.1,179.0,71.0] ||  -> .
Formulae used in the proof : conjecture0 axiom1 axiom2 axiom18 axiom19 axiom16 axiom17

--------------------------SPASS-STOP------------------------------
