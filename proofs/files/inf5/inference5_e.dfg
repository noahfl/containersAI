begin_problem(Scenario5e).


list_of_descriptions.
name({*Qualitative Reasoning About Containers - Case 5e*}).
author({*Professor Ernest Davis, Angelica Chen, Casey McGinley, Noah Frazier-Logue*}).
status(unsatisfiable).
description({*16 July 2016*}).

end_of_list.

list_of_symbols.

functions[(Sequence,2), (Contents,2), (Place,2), (RUnion,2), (ConvexHull,1), (Singleton,1), (Pair,2), (Union,2), (CContents,2), (UContents,2), (TravelTo,1), (StandStill,0), (ManipTo,2), (Slice,2), (HPlace,1), (HUnion,2), (MovingGroup,2), (PutInUC,2), (LoadUprightContainer,2), (Place,2), (Union,2), (RUnion,2), (UContents,2), (Contents,2), (MovingGroup,2), (Ta4,0), (Ob4,0), (Rc4,0), (Ox4,0), (Agent,0), (TravelTo,1), (Tm1,0), (Ra1,0), (PutInUC,2), (LoadUprightContainer,2), (Sequence,2), (HPlace,1), (Slice,2), (StandStill,0), (Ta4,0), (Tb,0), (Tm1,0), (Tm2,0), (Ra4,0), (Rc1,0), (Ta5,0), (Ob5,0), (Ol5,0), (Rc5,0), (Os5,0), (Tb5,0), (Hu,0), (Hc,0), (Tm,0),(Oa,0), (Tx,0), (Su,0)].

predicates[(Time,1), (Object,1), (Region,1), (UprightContainer,3), (FullyOutside,2), (SmallSet,2), (ObjectSet,1), (AllStable,1), (EmptyHanded,1), (Graspable,2), (Reachable,2), (FullyOutside,2), (SafelyMovable,2), (SmallObject,1), (BoxedIn,3), (NoPartialContents,2), (Occurs,3), (Action,1), (CanGrasp,2), (UprightContainerShape,2), (UContained,3), (P,2), (Element,2), (Lt,2), (Leq,2), (Leq3, 3), (Motionless,3), (Released,3), (Grasp,2), (Moves,3), (Feasible,2), (SafeManipulate,4), (PartiallyContained,2), (OSPlace,3), (PreserveCContents,3), (PreserveUContents,3), (PreserveBoxWithLid,3), (Stable,2), (StableThroughout,3), (SmallSet,2), (Fits,2), (MuchSmaller,2), (OMuchSmaller,2), (OpenContainerShape,2), (OpenContained,2), (CContained,3), (BLContained,3), (DynamicUContainer,4), (O,2), (Cavity,2), (History,1), (Constant,3), (Grasps,3), (FeasiblePlace,2), (OV,2), (BoxWithLidC,4), (BoxWithLid,3), (CombinedContainer,3), (EC,2), (PersistentCavity,4), (NoExitCavity,4), (NoEntranceCavity,4), (DR,2), (Continuous,3), (AlwaysIntConn,3), (IntConn,1), (Isolates,3), (ClosedContainer,3), (CausallyIsolated,3), (StaticCausallyIsolated,3), (RigidObject,1)].

end_of_list.

list_of_formulae(axioms).

%%%% Sortal Axioms

% Sequence
formula(forall([a1,a2], implies(and(Action(a1), Action(a2)), Action(Sequence(a1,a2))))).
% RUnion
formula(forall([u,v], implies(and(Region(u), Region(v)), Region(RUnion(u,v))))).
% ConvexHull
formula(forall([r], implies(Region(r), Region(ConvexHull(r))))).
% Singleton
formula(forall([x], implies(Object(x), ObjectSet(Singleton(x))))).
% Pair
formula(forall([x,y], implies(and(Object(x), Object(y)), ObjectSet(Pair(x,y))))).
% Union
formula(forall([sa,sb], implies(and(ObjectSet(sa), ObjectSet(sb)), ObjectSet(Union(sa,sb))))).
% Place
formula(forall([t,o], implies(and(Time(t), Object(o)), Region(Place(t,o))))).
% Contents
formula(forall([t,r], implies(and(Time(t), Region(r)), ObjectSet(Contents(t,r))))).
% CContents
formula(forall([t,s], implies(and(Time(t), ObjectSet(s)), ObjectSet(CContents(t,s))))).
% UContents
formula(forall([t,s], implies(and(Time(t), ObjectSet(s)), ObjectSet(UContents(t,s))))).
% TravelTo
formula(forall([r], implies(Region(r), Action(TravelTo(r))))).
% StandStill
formula(Action(StandStill)).
% ManipTo
formula(forall([o,r], implies(and(Object(o), Region(r)), Action(ManipTo(o,r))))).
% Slice
formula(forall([t,h], implies(and(Time(t), History(h)), Region(Slice(t,h))))).
% HPlace
formula(forall([o], implies(Object(o), History(HPlace(o))))).
% HUnion
formula(forall([ha,hb], implies(and(History(ha), History(hb)), History(HUnion(ha,hb))))).
% MovingGroup
formula(forall([t,ox], implies(and(Time(t), Object(ox)), ObjectSet(MovingGroup(t,ox))))).
% PutInUC
formula(forall([ox,ob], implies(and(Object(ox), Object(ob)), Action(PutInUC(ox,ob))))).
% LoadUprightContainer
formula(forall([ox,ob], implies(and(Object(ox), Object(ob)), Action(LoadUprightContainer(ox,ob))))).

%%% Time
%%% Time
%% Time ordering
% TOSA
formula(forall([x,y], implies(or(Lt(x,y), Leq(x,y)), and(Time(x), Time(y))))).
% TOSB
formula(forall([x,y,z], implies(Leq3(x,y,z), and(Time(x), Time(y), Time(z))))).
%% Actions
% TASA
formula(forall([ta,tb,a], implies(Occurs(ta,tb,a), and(Time(ta), Time(tb), Action(a))))).
% TASB
formula(forall([t,a], implies(Feasible(t,a), and(Time(t), Action(a))))).

%%% Objects
%% Object sets
% OSSA
formula(forall([x,s], implies(Element(x,s), and(Object(x), ObjectSet(s))))).
%% Objects and object sets: spatio-temporal
% OOSA
formula(forall([t,s,r], implies(OSPlace(t,s,r), and(Time(t), ObjectSet(s), Region(r))))).
% OOSB
formula(forall([o,r], implies(FeasiblePlace(o,r), and(Object(o), Region(r))))).
%% Objects containing regions
% ORSA
formula(forall([t,o,r], implies(UprightContainer(t,o,r), and(Time(t), Object(o), Region(r))))).
%% Object containment
% OCSA
formula(forall([t,ox,ob], implies(or(CContained(t,ox,ob), UContained(t,ox,ob), BLContained(t,ox,ob)), and(Time(t), Object(ox), Object(ob))))).
%% Fits and small set
% OFSA
formula(forall([o], implies(SmallObject(o), Object(o)))).
% OFSB
formula(forall([s,r], implies(or(Fits(s,r), SmallSet(s,r)), and(ObjectSet(s), Region(r))))).
% OFSC
formula(forall([o,r], implies(OMuchSmaller(o,r), and(Object(o), Region(r))))).
%% Isolates
% OISA
formula(forall([t,sp,sx], implies(Isolates(t,sp,sx), and(Time(t), ObjectSet(sp), ObjectSet(sx))))). 

%%% Specific Actions
%% Safe manipulation
% ASSA
formula(forall([t,o], implies(SafelyMovable(t,o), and(Time(t), Object(o))))).
% ASSB
formula(forall([t,ox,ob], implies(BoxedIn(t,ox,ob), and(Time(t), Object(ox), Object(ob))))).
% ASSC
formula(forall([ta,tb,o,r], implies(SafeManipulate(ta,tb,o,r), and(Time(ta), Time(tb), Object(o), Region(r))))).
% ASSD
formula(forall([ta,tb,o], implies(or(PreserveCContents(ta,tb,o), PreserveUContents(ta,tb,o), PreserveBoxWithLid(ta,tb,o)), and(Time(ta), Time(tb), Object(o))))).
%% Loading an upright container
% ALSA
formula(forall([ra,rb], implies(FullyOutside(ra,rb), and(Region(ra), Region(rb))))).
% ALSB
formula(forall([t,r], implies(Reachable(t,r), and(Time(t), Region(r))))).


%%% Spatial Relations
%% Basic Spatial Relations
% SRSA
formula(forall([u,v], implies(or(DR(u,v), EC(u,v), P(u,v), O(u,v), OV(u,v)), and(Region(u), Region(v))))).
%% Spatial containment
% SCSA/B
formula(forall([ra,rb], implies(or(OpenContained(ra,rb), FullyOutside(ra,rb), OpenContainerShape(ra,rb), UprightContainerShape(ra,rb)), and(Region(ra), Region(rb))))).
% SCSC
formula(forall([ra,rb], implies(or(Cavity(ra,rb), PartiallyContained(ra,rb)), and(Region(ra), Region(rb))))).
% SCSD
formula(forall([ra,rb,rc], implies(CombinedContainer(ra,rb,rc), and(Region(ra), Region(rb), Region(rc))))).
% SCSE
formula(forall([r], implies(IntConn(r), Region(r)))).
%% Much smaller
% SMSA
formula(forall([ra,rb], implies(MuchSmaller(ra,rb), and(Region(ra), Region(rb))))).

%%% Motion and Manipulation
%% Motion
% MMSA
formula(forall([ta,tb,o], implies(Moves(ta,tb,o), and(Time(ta), Time(tb), Object(o))))).
%% Stability and falling
% MSSA
formula(forall([t], implies(AllStable(t), Time(t)))).
% MSSB
formula(forall([t,o], implies(Stable(t,o), and(Time(t), Object(o))))).
%% Frame axioms
% MFSA
formula(forall([t,o], implies(NoPartialContents(t,o), and(Time(t), Object(o))))).
% MFSB
formula(forall([ta,tb,o], implies(or(StableThroughout(ta,tb,o), Released(ta,tb,o), Motionless(ta,tb,o)), and(Time(ta), Time(tb), Object(o))))).
% MFSC
formula(forall([ta,tb,s], implies(or(CausallyIsolated(ta,tb,s), StaticCausallyIsolated(ta,tb,s)), and(Time(ta), Time(tb), ObjectSet(s))))).
%% Grasping an object
% MGSA
formula(forall([t], implies(EmptyHanded(t), Time(t)))).
% MGSB
formula(forall([t,o], implies(CanGrasp(t,o), and(Time(t), Object(o))))).
% MGSC
formula(forall([t,o], implies(Grasp(t,o), and(Time(t), Object(o))))).
% MGSD
formula(forall([ta,tb,o], implies(Grasps(ta,tb,o), and(Time(ta), Time(tb), Object(o))))).
%% Feasibility of Traveling
% MFSA
formula(forall([t,o], implies(Graspable(t,o), and(Time(t),Object(o))))).

%%% Histories
%% Basic properties of histories
% HBSA
formula(forall([t1,t2,h], implies(Constant(t1,t2,h), and(Time(t1), Time(t2), History(h))))).
% HBSB
formula(forall([ta,tb,h], implies(or(AlwaysIntConn(ta,tb,h), Continuous(ta,tb,h)), and(Time(ta), Time(tb), History(h))))).
%% Dynamic containers and cavities
formula(forall([t1,t2,hc,ho], implies(or(PersistentCavity(t1,t2,hc,ho),NoExitCavity(t1,t2,hc,ho), NoEntranceCavity(t1,t2,hc,ho)), and(Time(t1), Time(t2), History(hc), History(ho))))).
%% Dynamic upright containers
% HDSA
formula(forall([ta,tb,ob,hc], implies(DynamicUContainer(ta,tb,ob,hc), and(Time(ta), Time(tb), Object(ob), History(hc))))).

%%% Rigid objects
%% Basic rigid objects
% RRSA
formula(forall([o], implies(RigidObject(o), Object(o)))).
%% Box with lid
% RBSA
formula(forall([t,ob,ol], implies(BoxWithLid(t,ob,ol), and(Time(t), Object(ob), Object(ol))))).
% RBSB
formula(forall([t,ob,ol,r], implies(BoxWithLidC(t,ob,ol,r), and(Time(t), Object(ob), Object(ol), Region(r))))).


% Temporal Axioms
% TID3
formula(forall([x,y,z], equiv(Leq3(x,y,z), and(Leq(x,y), Leq(y,z)))),TID3).
% TID1
formula(forall([x,y], implies(and(Time(x), Time(y)), equiv(Leq(x,y), or(Lt(x,y), equal(x,y))))),TID1).
% TIA2
formula(forall([x,y,z], implies(and(Lt(x,y), Lt(y,z)), Lt(x,z))),TIA2).

% Ta5
formula(Time(Ta5)).
% Tb5
formula(Time(Tb5)).
% Ob5
formula(Object(Ob5)).
% Ol5
formula(Object(Ol5)).
% Rc5
formula(Region(Rc5)).
% Os5
formula(Object(Os5)).
% Hu
formula(History(Hu)).
% Hc
formula(History(Hc)).
% Tm
formula(Time(Tm)).
% Oa
formula(Object(Oa)).
% Tx
formula(Time(Tx)).
% Agent
formula(Object(Agent)).
% Su
formula(ObjectSet(Su)).

%%%% Specifications

% C5A1
formula(BoxWithLidC(Ta5,Ob5,Ol5,Rc5),C5A1).
% C5A2
formula(P(Place(Ta5,Os5),Rc5),C5A2).
% C5A3
formula(not(P(Place(Ta5,Agent),Rc5)),C5A3).
% C5A4
formula(AllStable(Ta5),C5A4).
% C5A5
formula(not(equal(Place(Ta5,Os5),Place(Tb5,Os5))),C5A5).
% C5A6
formula(Motionless(Ta5,Tb5,Ob5),C5A6).

% --------

% OSD4
formula(forall([x,y,z], implies(and(Object(x), Object(y), Object(z)), equiv(Element(z,Pair(x,y)), or(equal(z,x), equal(z,y))))),OSD4).

% RBD1
formula(forall([t,ob,ol,rc], equiv(BoxWithLidC(t,ob,ol,rc), and(BoxWithLid(t,ob,ol), CombinedContainer(Place(t,ob), Place(t,ol),rc)))),RBD1).

% RBA1
formula(forall([t,ob,ol], implies(BoxWithLid(t,ob,ol), and(RigidObject(ob), RigidObject(ol), Stable(t,ol), not(equal(ob,Agent)), not(equal(ol,Agent)), exists([rc], CombinedContainer(Place(t,ob),Place(t,ol),rc))))),RBA1).

% RBA5
formula(forall([ta,tb,ob,ol], implies(and(BoxWithLid(ta,ob,ol), equal(Place(tb,ob), Place(ta,ob)), equal(Place(tb,ol), Place(ta,ol))), BoxWithLid(tb,ob,ol))),RBA5).

% Lem5K
formula(forall([t,ob,ol,rc], implies(BoxWithLidC(t,ob,ol,rc), ClosedContainer(t,Pair(ob,ol),rc))),Lem5K).

% OIA3
formula(forall([t,sp,rc], implies(and(ClosedContainer(t,sp,rc), not(P(Place(t,Agent),rc)), not(Element(Agent,sp))), Isolates(t,sp,Contents(t,rc)))),OIA3).

% OSA1
formula(forall([sa,sb], implies(and(ObjectSet(sa), ObjectSet(sb)), implies(forall([x], equiv(Element(x,sa), Element(x,sb))), equal(sa,sb)))),OSA1).

% OTD2
formula(forall([o,r,t], implies(and(Object(o), Region(r), Time(t)), equiv(Element(o,Contents(t,r)), P(Place(t,o),r)))),OTD2).

% MRD1
formula(forall([ta,tb,sx], equiv(CausallyIsolated(ta,tb,sx), exists([sp], and(ObjectSet(sp), and(forall([o], implies(Element(o,sp), Motionless(ta,tb,o))), forall([t], implies(and(Leq(ta,t), Lt(t,tb)), Isolates(t,sp,sx)))))))),MRD1).

% MRD2
formula(forall([ta,tb,s], equiv(StaticCausallyIsolated(ta,tb,s), and(CausallyIsolated(ta,tb,s), forall([ox], implies(Element(ox,s), Stable(ta,ox)))))),MRD2).

% MSD1
formula(forall([t], equiv(AllStable(t), forall([o], implies(Object(o), or(equal(o,Agent), Stable(t,o), Grasp(t,o)))))),MSD1).

% OSD2
formula(forall([x,y], implies(and(Object(x), Object(y)), equiv(Element(y,Singleton(x)), equal(y,x)))),OSD2).

% MRA2
formula(forall([ta,tb,s,o], implies(and(StaticCausallyIsolated(ta,tb,s), Element(o,s)), and(Motionless(ta,tb,o), StableThroughout(ta,tb,o)))),MRA2).

% MOD2
formula(forall([ta,tb,o], equiv(Motionless(ta,tb,o), and(Lt(ta,tb), forall([t], implies(Time(t), implies(Leq3(ta,t,tb), equal(Place(t,o), Place(ta,o)))))))),MOD2).

% MGA1
formula(forall([t,sp,sx,o], implies(and(Isolates(t,sp,sx), Element(o,sx)), and(not(Grasp(t,o)), not(CanGrasp(t,o))))),MGA1).

% 5.1
% formula(Motionless(Ta5,Tb5,Ol5)).

% 5.2
% formula(forall([tm], implies(Leq3(Ta5,tm,Tb5), equal(Place(tm,Ol5), Place(Ta5,Ol5)))),5dot2).

% 5.3
formula(Lt(Ta5,Tb5),5dot3).

% 5.4
% formula(forall([tc], implies(Leq3(Ta5,tc,Tb5), equal(Place(tc,Ob5), Place(Ta5,Ob5)))),5dot4).

% 5.37
% formula(forall([o,tx], implies(and(Object(o), P(Place(Ta5,o),Rc5), Leq3(Ta5,tx,Tb5)), P(Place(tx,o),Rc5))),5dot37).

% 5.53
% formula(forall([o,tx], implies(and(Object(o), not(P(Place(Ta5,o),Rc5)), Leq3(Ta5,tx,Tb5)), DR(Place(tx,o),Rc5))),5dot53).

% 5.53a
% formula(forall([o,tx], implies(and(Object(o), not(P(Place(Ta5,o),Rc5)), Leq3(Ta5,tx,Tb5)), not(P(Place(tx,o),Rc5)))),5dot53a).

% 5.54
% formula(equal(Su,Pair(Ob5,Ol5)),5dot54).

% 5.55 
% formula(forall([o], equiv(Element(o,Su), or(equal(o,Ob5), equal(o,Ol5)))),5dot56).

% 5.57 (assume)
% formula(Leq3(Ta5,Tx,Tb5),5dot57).

% 5.58 test
% formula(BoxWithLidC(Tx,Ob5,Ol5,Rc5),5dot58).

% 5.59 test
% formula(ClosedContainer(Tx,Su,Rc5),5dot59).

% 5.60 test
% formula(Isolates(Tx,Su,Contents(Tx,Rc5)),5dot60).

% 5.61 test
% formula(equal(Contents(Tx,Rc5), Contents(Ta5,Rc5)),5dot61).

% 5.62 test
% formula(Isolates(Tx,Su,Contents(Ta5,Rc5)),5dot62).

% 5.64 test
formula(forall([tx], implies(Leq3(Ta5,tx,Tb5), Isolates(tx,Su,Contents(Ta5,Rc5)))),5dot64).

% 5.65 test
% formula(CausallyIsolated(Ta5,Tb5,Contents(Ta5,Rc5)),5dot65).

% 5.66 test
% formula(StaticCausallyIsolated(Ta5,Tb5,Contents(Ta5,Rc5)),5dot66).

% 5.65A
formula(not(Element(Agent,Contents(Ta5,Rc5))),5dot65A).

% 5.65B
formula(forall([tx,ox], implies(and(Leq3(Ta5,tx,Tb5), Element(ox,Contents(Ta5,Rc5))), not(Grasp(tx,ox)))),5dot65B).

end_of_list.


list_of_formulae(conjectures).

% full inference (proof)
formula(not(Motionless(Ta5,Tb5,Ol5))).

% 5.68 (proof)
% formula(Motionless(Ta5,Tb5,Os5)).

% 5.67 (proof)
% formula(Element(Os5,Contents(Ta5,Rc5))).

% 5.66 (proof in separate file)
% formula(StaticCausallyIsolated(Ta5,Tb5,Contents(Ta5,Rc5))).

% 5.65A (proof in separate file)
% formula(not(Element(Agent,Contents(Ta5,Rc5))),5dot65A).

% 5.65B (proof in separate file)
% formula(forall([tx,ox], implies(and(Leq3(Ta5,tx,Tb5), Element(ox,Contents(Ta5,Rc5))), not(Grasp(tx,ox)))),5dot65B).

% 5.65 (proof in separate file)
% formula(CausallyIsolated(Ta5,Tb5,Contents(Ta5,Rc5))).
% formula(Isolates(Tx,Su,Contents(Tx,Rc5))).

% 5.59 (proof)
% formula(ClosedContainer(Tx,Su,Rc5)).

% 5.58 (proof in separate file)
% formula(BoxWithLidC(Tx,Ob5,Ol5,Rc5)).

% 5.56 (proof)
% formula(not(Element(Agent,Su))).

% 5.55 (proof)
% formula(forall([o], equiv(Element(o,Su), or(equal(o,Ob5), equal(o,Ol5))))).


end_of_list.


list_of_settings(SPASS).
{*set_flag(DocProof,1).*}
end_of_list.

end_problet
.
