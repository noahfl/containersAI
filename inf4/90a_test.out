
--------------------------SPASS-START-----------------------------
Input Problem:
1[0:Inp] || equal(Union(D,E),C)** -> .
2[0:Inp] || Element(U,D)* -> Element(U,C).
3[0:Inp] || Element(U,E)* -> Element(U,C).
4[0:Inp] || Element(U,V) -> Element(U,Union(V,W))*.
5[0:Inp] || Element(U,V) -> Element(U,Union(W,V))*.
6[0:Inp] || Element(U,C) -> Element(U,D) Element(U,E)*.
7[0:Inp] || Element(U,Union(V,W))* -> Element(U,W) Element(U,V).
8[0:Inp] ||  -> Element(skf1(U,V),V)* Element(skf1(U,V),U)* equal(V,U).
9[0:Inp] || Element(skf1(U,V),V)* Element(skf1(U,V),U)* -> equal(V,U).
 This is a first-order Non-Horn problem containing equality.
 This is a problem that has, if any, a non-trivial domain model.
 The conjecture is ground.
 Axiom clauses: 8 Conjecture clauses: 1
 Inferences: IEqR=1 IEqF=1 ISpR=1 ISpL=1 IORe=1 IOFc=1 
 Reductions: RFRew=1 RBRew=1 RFMRR=1 RBMRR=1 RObv=1 RUnC=1 RTaut=1 RFSub=1 RBSub=1 RAED=2 RCon=1 
 Extras    : Input Saturation, Dynamic Selection, Full Splitting, Full Reduction,  Ratio: 5, FuncWeight: 1, VarWeight: 1
 Precedence: skf1 > skf0 > Union > Element > skc3 > skc2 > skc1 > skc0 > E > D > C
 Ordering  : KBO
Processed Problem:

Worked Off Clauses:

Usable Clauses:
1[0:Inp] || equal(Union(D,E),C)** -> .
3[0:Inp] || Element(U,E)* -> Element(U,C).
2[0:Inp] || Element(U,D)* -> Element(U,C).
5[0:Inp] || Element(U,V) -> Element(U,Union(W,V))*.
4[0:Inp] || Element(U,V) -> Element(U,Union(V,W))*.
6[0:Inp] || Element(U,C) -> Element(U,E)* Element(U,D).
7[0:Inp] || Element(U,Union(V,W))* -> Element(U,V) Element(U,W).
8[0:Inp] ||  -> equal(U,V) Element(skf1(V,U),V)* Element(skf1(V,U),U)*.
9[0:Inp] || Element(skf1(U,V),U)* Element(skf1(U,V),V)* -> equal(V,U).
	Given clause: 1[0:Inp] || equal(Union(D,E),C)** -> .
	Given clause: 3[0:Inp] || Element(U,E)* -> Element(U,C).
	Given clause: 2[0:Inp] || Element(U,D)* -> Element(U,C).
	Given clause: 5[0:Inp] || Element(U,V) -> Element(U,Union(W,V))*.
	Given clause: 4[0:Inp] || Element(U,V) -> Element(U,Union(V,W))*.
	Given clause: 6[0:Inp] || Element(U,C) -> Element(U,E)* Element(U,D).
	Given clause: 7[0:Inp] || Element(U,Union(V,W))* -> Element(U,V) Element(U,W).
	Given clause: 8[0:Inp] ||  -> equal(U,V) Element(skf1(V,U),V)* Element(skf1(V,U),U)*.
	Given clause: 18[0:Res:8.1,3.0] ||  -> equal(U,E) Element(skf1(E,U),U)* Element(skf1(E,U),C)*.
	Given clause: 9[0:Inp] || Element(skf1(U,V),U)*+ Element(skf1(U,V),V)* -> equal(V,U).
	Given clause: 24[0:Fac:18.1,18.2] ||  -> equal(E,C) Element(skf1(E,C),C)*.
	Given clause: 34[1:Spt:24.0] ||  -> equal(E,C)**.
	Given clause: 35[1:Rew:34.0,1.0] || equal(Union(D,C),C)** -> .
	Given clause: 43[1:Rew:34.0,40.1] ||  -> equal(D,C) Element(skf1(C,D),C)*.
	Given clause: 49[2:Spt:43.0] ||  -> equal(D,C)**.
	Given clause: 51[2:Rew:49.0,35.0] || equal(Union(C,C),C)** -> .
	Given clause: 31[0:Res:4.1,9.0] || Element(skf1(Union(U,V),W),U)*+ Element(skf1(Union(U,V),W),W)* -> equal(W,Union(U,V)).
	Given clause: 30[0:Res:5.1,9.0] || Element(skf1(Union(U,V),W),V)*+ Element(skf1(Union(U,V),W),W)* -> equal(W,Union(U,V)).
	Given clause: 23[0:Res:8.2,7.0] ||  -> equal(Union(U,V),W) Element(skf1(W,Union(U,V)),W)* Element(skf1(W,Union(U,V)),U)* Element(skf1(W,Union(U,V)),V)*.
	Given clause: 61[0:Fac:23.1,23.2] ||  -> equal(Union(U,V),U) Element(skf1(U,Union(U,V)),U)* Element(skf1(U,Union(U,V)),V)*.
	Given clause: 69[0:Fac:61.1,61.2] ||  -> equal(Union(U,U),U) Element(skf1(U,Union(U,U)),U)*.
	Given clause: 20[0:Res:8.1,7.0] ||  -> equal(U,Union(V,W)) Element(skf1(Union(V,W),U),U)* Element(skf1(Union(V,W),U),V)* Element(skf1(Union(V,W),U),W)*.
	Given clause: 76[0:Obv:75.1] || Element(skf1(U,Union(U,U)),Union(U,U))* -> equal(Union(U,U),U).
	Given clause: 97[2:Spt:93.0,43.1] ||  -> Element(skf1(C,D),C)*.
	Given clause: 96[2:Spt:93.0,43.0,49.0] || equal(D,C)** -> .
	Given clause: 90[0:MRR:86.0,69.1] ||  -> equal(Union(U,U),U)**.
	Given clause: 35[1:Rew:34.0,1.0] || equal(Union(D,C),C)** -> .
	Given clause: 2[0:Inp] || Element(U,D)* -> Element(U,C).
	Given clause: 103[2:MRR:102.1,96.0] || Element(skf1(C,D),D)* -> .
	Given clause: 22[0:Res:8.2,2.0] ||  -> equal(D,U) Element(skf1(U,D),U)* Element(skf1(U,D),C)*.
	Given clause: 19[0:Res:8.1,2.0] ||  -> equal(U,D) Element(skf1(D,U),U)* Element(skf1(D,U),C)*.
	Given clause: 138[2:MRR:134.0,96.0] ||  -> Element(skf1(D,C),C)*.
	Given clause: 62[0:Fac:23.1,23.3] ||  -> equal(Union(U,V),V) Element(skf1(V,Union(U,V)),U)* Element(skf1(V,Union(U,V)),V)*.
	Given clause: 126[0:Res:61.1,2.0] ||  -> equal(Union(D,U),D) Element(skf1(D,Union(D,U)),U)* Element(skf1(D,Union(D,U)),C)*.
	Given clause: 146[0:Fac:126.1,126.2] ||  -> equal(Union(D,C),D) Element(skf1(D,Union(D,C)),C)*.
	Given clause: 143[0:Res:62.2,2.0] ||  -> equal(Union(U,D),D) Element(skf1(D,Union(U,D)),U)* Element(skf1(D,Union(U,D)),C)*.
	Given clause: 153[0:Fac:143.1,143.2] ||  -> equal(Union(C,D),D) Element(skf1(D,Union(C,D)),C)*.
	Given clause: 77[0:Fac:20.1,20.2] ||  -> equal(Union(U,V),U) Element(skf1(Union(U,V),U),U)* Element(skf1(Union(U,V),U),V)*.
	Given clause: 168[0:MRR:167.0,77.1] ||  -> Element(skf1(Union(U,V),U),V)* equal(Union(U,V),U).
	Given clause: 171[0:Res:168.0,2.0] ||  -> equal(Union(U,D),U) Element(skf1(Union(U,D),U),C)*.
	Given clause: 175[0:Obv:173.1] || Element(skf1(Union(U,V),U),U)* -> equal(Union(U,V),U).
	Given clause: 186[0:Obv:184.0] ||  -> equal(Union(C,D),C)**.
	Given clause: 78[0:Fac:20.1,20.3] ||  -> equal(Union(U,V),V) Element(skf1(Union(U,V),V),U)* Element(skf1(Union(U,V),V),V)*.
	Given clause: 221[0:MRR:220.0,78.2] ||  -> Element(skf1(Union(U,V),V),U)* equal(Union(U,V),V).
	Given clause: 225[0:Res:221.0,2.0] ||  -> equal(Union(D,U),U) Element(skf1(Union(D,U),U),C)*.
	Given clause: 230[0:Obv:226.1] || Element(skf1(Union(U,V),V),V)* -> equal(Union(U,V),V).
	Given clause: 248[1:Spt:246.0,24.1] ||  -> Element(skf1(E,C),C)*.
	Given clause: 247[1:Spt:246.0,24.0,34.0] || equal(E,C)** -> .
	Given clause: 1[0:Inp] || equal(Union(D,E),C)** -> .
	Given clause: 245[0:Obv:242.0] ||  -> equal(Union(D,C),C)**.
	Given clause: 3[0:Inp] || Element(U,E)* -> Element(U,C).
	Given clause: 129[0:Fac:22.1,22.2] ||  -> equal(D,C) Element(skf1(C,D),C)*.
	Given clause: 302[2:Spt:129.0] ||  -> equal(D,C)**.
	Given clause: 331[2:MRR:330.0,247.0] ||  -> Element(skf1(C,E),C)*.
	Given clause: 311[2:Rew:302.0,1.0] || equal(Union(C,E),C)** -> .
	Given clause: 354[2:MRR:353.1,247.0] || Element(skf1(C,E),E)* -> .
	Given clause: 336[2:MRR:335.0,311.0] ||  -> Element(skf1(C,Union(C,E)),C)*.
	Given clause: 357[2:MRR:356.1,311.0] || Element(skf1(C,Union(C,E)),Union(C,E))* -> .
	Given clause: 363[2:Spt:361.0,129.1] ||  -> Element(skf1(C,D),C)*.
	Given clause: 362[2:Spt:361.0,129.0,302.0] || equal(D,C)** -> .
	Given clause: 1[0:Inp] || equal(Union(D,E),C)** -> .
	Given clause: 245[0:Obv:242.0] ||  -> equal(Union(D,C),C)**.
	Given clause: 186[0:Obv:184.0] ||  -> equal(Union(C,D),C)**.
	Given clause: 364[2:MRR:134.0,362.0] ||  -> Element(skf1(D,C),C)*.
	Given clause: 365[2:MRR:253.1,362.0] || Element(skf1(C,D),D)* -> .
	Given clause: 2[0:Inp] || Element(U,D)* -> Element(U,C).
	Given clause: 28[0:Obv:26.1] ||  -> equal(E,D) Element(skf1(E,D),C)*.
	Given clause: 428[3:Spt:28.0] ||  -> equal(E,D)**.
	Given clause: 452[3:Obv:449.1] || Element(U,C) -> Element(U,D)*.
	Given clause: 477[3:Spt:475.0,28.1] ||  -> Element(skf1(E,D),C)*.
	Given clause: 247[1:Spt:246.0,24.0,34.0] || equal(E,C)** -> .
	Given clause: 476[3:Spt:475.0,28.0,428.0] || equal(E,D)** -> .
	Given clause: 1[0:Inp] || equal(Union(D,E),C)** -> .
	Given clause: 248[1:Spt:246.0,24.1] ||  -> Element(skf1(E,C),C)*.
	Given clause: 478[3:MRR:298.0,476.0] ||  -> Element(skf1(D,E),C)*.
	Given clause: 3[0:Inp] || Element(U,E)* -> Element(U,C).
	Given clause: 6[0:Inp] || Element(U,C) -> Element(U,E)* Element(U,D).
	Given clause: 19[0:Res:8.1,2.0] ||  -> equal(U,D) Element(skf1(D,U),U)* Element(skf1(D,U),C)*.
	Given clause: 301[0:Obv:297.1] ||  -> equal(Union(E,D),D) Element(skf1(D,Union(E,D)),C)*.
	Given clause: 300[0:Obv:296.1] ||  -> equal(Union(D,E),D) Element(skf1(D,Union(D,E)),C)*.
	Given clause: 171[0:Res:168.0,2.0] ||  -> equal(Union(U,D),U) Element(skf1(Union(U,D),U),C)*.
	Given clause: 225[0:Res:221.0,2.0] ||  -> equal(Union(D,U),U) Element(skf1(Union(D,U),U),C)*.
	Given clause: 22[0:Res:8.2,2.0] ||  -> equal(D,U) Element(skf1(U,D),U)* Element(skf1(U,D),C)*.
	Given clause: 287[0:Res:168.0,3.0] ||  -> equal(Union(U,E),U) Element(skf1(Union(U,E),U),C)*.
	Given clause: 527[0:Obv:526.0] ||  -> equal(Union(C,E),C)**.
	Given clause: 547[1:MRR:546.1,247.0] ||  -> Element(skf1(C,E),C)*.
	Given clause: 549[1:MRR:548.1,247.0] || Element(skf1(C,E),E)* -> .
	Given clause: 21[0:Res:8.2,3.0] ||  -> equal(E,U) Element(skf1(U,E),U)* Element(skf1(U,E),C)*.
	Given clause: 560[1:MRR:558.0,547.0] ||  -> Element(skf1(C,E),D)*.
	Given clause: 283[0:Res:221.0,3.0] ||  -> equal(Union(E,U),U) Element(skf1(Union(E,U),U),C)*.
	Given clause: 572[0:Obv:571.0] ||  -> equal(Union(E,C),C)**.
	Given clause: 18[0:Res:8.1,3.0] ||  -> equal(U,E) Element(skf1(E,U),U)* Element(skf1(E,U),C)*.
	Given clause: 29[0:Res:6.1,9.0] || Element(skf1(E,U),C)+ Element(skf1(E,U),U)* -> Element(skf1(E,U),D)* equal(U,E).
	Given clause: 607[1:MRR:604.0,604.2,248.0,247.0] ||  -> Element(skf1(E,C),D)*.
	Given clause: 206[0:Rew:186.0,201.2,186.0,201.1] || Element(skf1(C,U),D)*+ Element(skf1(C,U),U)* -> equal(U,C).
	Given clause: 552[0:Rew:527.0,542.2,527.0,542.1] || Element(skf1(C,U),E)*+ Element(skf1(C,U),U)* -> equal(U,C).
	Given clause: 143[0:Res:62.2,2.0] ||  -> equal(Union(U,D),D) Element(skf1(D,Union(U,D)),U)* Element(skf1(D,Union(U,D)),C)*.
	Given clause: 124[0:Res:23.2,2.0] ||  -> equal(Union(D,U),V) Element(skf1(V,Union(D,U)),V)* Element(skf1(V,Union(D,U)),U)* Element(skf1(V,Union(D,U)),C)*.
	Given clause: 671[0:MRR:670.0,670.2,8.2,1.0] ||  -> Element(skf1(C,Union(D,E)),C)*.
	Given clause: 676[0:MRR:675.1,1.0] || Element(skf1(C,Union(D,E)),Union(D,E))* -> .
	Given clause: 677[0:Res:5.1,676.0] || Element(skf1(C,Union(D,E)),E)* -> .
SPASS V 3.5 
SPASS beiseite: Proof found.
Problem: 90a_test.dfg 
SPASS derived 458 clauses, backtracked 84 clauses, performed 4 splits and kept 223 clauses.
SPASS allocated 46452 KBytes.
SPASS spent	0:00:00.04 on the problem.
		0:00:00.01 for the input.
		0:00:00.01 for the FLOTTER CNF translation.
		0:00:00.00 for inferences.
		0:00:00.00 for the backtracking.
		0:00:00.01 for the reduction.


Here is a proof with depth 10, length 35 :
1[0:Inp] || equal(Union(D,E),C)** -> .
2[0:Inp] || Element(U,D)* -> Element(U,C).
3[0:Inp] || Element(U,E)* -> Element(U,C).
4[0:Inp] || Element(U,V) -> Element(U,Union(V,W))*.
5[0:Inp] || Element(U,V) -> Element(U,Union(W,V))*.
6[0:Inp] || Element(U,C) -> Element(U,E)* Element(U,D).
7[0:Inp] || Element(U,Union(V,W))* -> Element(U,V) Element(U,W).
8[0:Inp] ||  -> equal(U,V) Element(skf1(V,U),V)* Element(skf1(V,U),U)*.
9[0:Inp] || Element(skf1(U,V),U)*+ Element(skf1(U,V),V)* -> equal(V,U).
20[0:Res:8.1,7.0] ||  -> equal(U,Union(V,W)) Element(skf1(Union(V,W),U),U)* Element(skf1(Union(V,W),U),V)* Element(skf1(Union(V,W),U),W)*.
23[0:Res:8.2,7.0] ||  -> equal(Union(U,V),W) Element(skf1(W,Union(U,V)),W)* Element(skf1(W,Union(U,V)),U)* Element(skf1(W,Union(U,V)),V)*.
30[0:Res:5.1,9.0] || Element(skf1(Union(U,V),W),V)*+ Element(skf1(Union(U,V),W),W)* -> equal(W,Union(U,V)).
31[0:Res:4.1,9.0] || Element(skf1(Union(U,V),W),U)*+ Element(skf1(Union(U,V),W),W)* -> equal(W,Union(U,V)).
77[0:Fac:20.1,20.2] ||  -> equal(Union(U,V),U) Element(skf1(Union(U,V),U),U)* Element(skf1(Union(U,V),U),V)*.
124[0:Res:23.2,2.0] ||  -> equal(Union(D,U),V) Element(skf1(V,Union(D,U)),V)* Element(skf1(V,Union(D,U)),U)* Element(skf1(V,Union(D,U)),C)*.
163[0:Res:77.1,31.0] || Element(skf1(Union(U,V),U),U)* -> equal(Union(U,V),U) Element(skf1(Union(U,V),U),V)* equal(Union(U,V),U).
167[0:Obv:163.1] || Element(skf1(Union(U,V),U),U)* -> Element(skf1(Union(U,V),U),V)* equal(Union(U,V),U).
168[0:MRR:167.0,77.1] ||  -> Element(skf1(Union(U,V),U),V)* equal(Union(U,V),U).
173[0:Res:168.0,30.0] || Element(skf1(Union(U,V),U),U)* -> equal(Union(U,V),U) equal(Union(U,V),U).
175[0:Obv:173.1] || Element(skf1(Union(U,V),U),U)* -> equal(Union(U,V),U).
287[0:Res:168.0,3.0] ||  -> equal(Union(U,E),U) Element(skf1(Union(U,E),U),C)*.
526[0:Res:287.1,175.0] ||  -> equal(Union(C,E),C)** equal(Union(C,E),C)**.
527[0:Obv:526.0] ||  -> equal(Union(C,E),C)**.
542[0:SpL:527.0,30.0] || Element(skf1(C,U),E) Element(skf1(Union(C,E),U),U)* -> equal(U,Union(C,E)).
552[0:Rew:527.0,542.2,527.0,542.1] || Element(skf1(C,U),E)*+ Element(skf1(C,U),U)* -> equal(U,C).
659[0:Res:124.2,552.0] || Element(skf1(C,Union(D,E)),Union(D,E))* -> equal(Union(D,E),C) Element(skf1(C,Union(D,E)),C) Element(skf1(C,Union(D,E)),C) equal(Union(D,E),C).
670[0:Obv:659.2] || Element(skf1(C,Union(D,E)),Union(D,E))* -> Element(skf1(C,Union(D,E)),C) equal(Union(D,E),C).
671[0:MRR:670.0,670.2,8.2,1.0] ||  -> Element(skf1(C,Union(D,E)),C)*.
675[0:Res:671.0,9.0] || Element(skf1(C,Union(D,E)),Union(D,E))* -> equal(Union(D,E),C).
676[0:MRR:675.1,1.0] || Element(skf1(C,Union(D,E)),Union(D,E))* -> .
677[0:Res:5.1,676.0] || Element(skf1(C,Union(D,E)),E)* -> .
678[0:Res:4.1,676.0] || Element(skf1(C,Union(D,E)),D)* -> .
680[0:Res:6.1,677.0] || Element(skf1(C,Union(D,E)),C) -> Element(skf1(C,Union(D,E)),D)*.
683[0:MRR:680.0,671.0] ||  -> Element(skf1(C,Union(D,E)),D)*.
684[0:MRR:683.0,678.0] ||  -> .
Formulae used in the proof : conjecture0 4dot89 OSD6 axiom1

--------------------------SPASS-STOP------------------------------
