
--------------------------SPASS-START-----------------------------
Input Problem:
1[0:Inp] ||  -> NoObstacles(skc3,skc5)*.
2[0:Inp] ||  -> NoObstacles(skc3,skc4)*.
3[0:Inp] ||  -> NoObstacles(T,Ra)*.
4[0:Inp] ||  -> NoObstacles(T,Rb)*.
5[0:Inp] || SmallObject(U) -> Object(U)*.
6[0:Inp] || AllStable(U) -> Time(U)*.
7[0:Inp] || EmptyHanded(U) -> Time(U)*.
8[0:Inp] || NoObstacles(skc3,RUnion(skc5,skc4))* -> .
9[0:Inp] || Feasible(U,V)* -> Time(U).
10[0:Inp] || Feasible(U,V)* -> Action(V).
11[0:Inp] || Element(U,V)* -> Object(U).
12[0:Inp] || Element(U,V)* -> ObjectSet(V).
13[0:Inp] || SafelyMovable(U,V)* -> Time(U).
14[0:Inp] || SafelyMovable(U,V)* -> Object(V).
15[0:Inp] || FullyOutside(U,V)* -> Region(U).
16[0:Inp] || FullyOutside(U,V)* -> Region(V).
17[0:Inp] || Reachable(U,V)* -> Time(U).
18[0:Inp] || Reachable(U,V)* -> Region(V).
19[0:Inp] || SkP0(U,V)* -> Region(V).
20[0:Inp] || SkP0(U,V)* -> Region(U).
21[0:Inp] || SkP1(U,V)* -> Region(V).
22[0:Inp] || SkP1(U,V)* -> Region(U).
23[0:Inp] || SmallSet(U,V)* -> ObjectSet(U).
24[0:Inp] || SmallSet(U,V)* -> Region(V).
25[0:Inp] || NoPartialContents(U,V)* -> Time(U).
26[0:Inp] || NoPartialContents(U,V)* -> Object(V).
27[0:Inp] || SkP2(U,V)* -> Time(V).
28[0:Inp] || SkP2(U,V)* -> Object(U).
29[0:Inp] || Graspable(U,V)* -> Time(U).
30[0:Inp] || Graspable(U,V)* -> Object(V).
31[0:Inp] || NoObstacles(U,V)* -> Time(U).
32[0:Inp] || NoObstacles(U,V)* -> Region(V).
33[0:Inp] || NoObstacles(U,V)* -> Time(U).
34[0:Inp] || Occurs(U,V,W)* -> Time(U).
35[0:Inp] || Occurs(U,V,W)* -> Time(V).
36[0:Inp] || Occurs(U,V,W)* -> Action(W).
37[0:Inp] || UprightContainer(U,V,W)* -> Time(U).
38[0:Inp] || UprightContainer(U,V,W)* -> Object(V).
39[0:Inp] || UprightContainer(U,V,W)* -> Region(W).
40[0:Inp] || UContained(U,V,W)* -> Time(U).
41[0:Inp] || UContained(U,V,W)* -> Object(V).
42[0:Inp] || UContained(U,V,W)* -> Object(W).
43[0:Inp] || BoxedIn(U,V,W)* -> Time(U).
44[0:Inp] || BoxedIn(U,V,W)* -> Object(V).
45[0:Inp] || BoxedIn(U,V,W)* -> Object(W).
46[0:Inp] || P(U,V) -> SkP0(V,U)*.
47[0:Inp] || DR(U,V) -> SkP0(V,U)*.
48[0:Inp] || FullyOutside(U,V) -> SkP1(V,U)*.
49[0:Inp] || UprightContainerShape(U,V) -> SkP1(V,U)*.
50[0:Inp] || CanGrasp(U,V) -> SkP2(V,U)*.
51[0:Inp] || Grasp(U,V) -> SkP2(V,U)*.
52[0:Inp] || Released(U,V,W)* -> Time(U).
53[0:Inp] || Released(U,V,W)* -> Time(V).
54[0:Inp] || Released(U,V,W)* -> Object(W).
55[0:Inp] || Trajectory(U,V,W)* -> Time(U).
56[0:Inp] || Trajectory(U,V,W)* -> Time(V).
57[0:Inp] || Trajectory(U,V,W)* -> Time(W).
58[0:Inp] || StaysIn(U,V,W,X)* -> Time(U).
59[0:Inp] || StaysIn(U,V,W,X)* -> Time(V).
60[0:Inp] || StaysIn(U,V,W,X)* -> Object(W).
61[0:Inp] || StaysIn(U,V,W,X)* -> Region(X).
62[0:Inp] || Leq3(U,V,W)* -> Leq(U,V).
63[0:Inp] || Leq3(U,V,W)* -> Leq(V,W).
64[0:Inp] || Time(U) -> Object(skf1(V,W))* NoObstacles(U,X)*.
65[0:Inp] || Lt(U,V)* Lt(V,W)* -> Lt(U,W)*.
66[0:Inp] || Leq(U,V) Leq(W,U) -> Leq3(W,U,V)*.
67[0:Inp] || equal(skf1(U,V),Agent)** Time(W) -> NoObstacles(W,X)*.
68[0:Inp] || Lt(U,V) Time(U) Time(V) -> Leq(U,V)*.
69[0:Inp] || equal(U,V) Time(U) Time(V) -> Leq(U,V)*.
70[0:Inp] || DR(U,V) DR(U,W) -> DR(U,RUnion(V,W))*.
71[0:Inp] || DR(Place(U,skf1(V,U)),V)* Time(U) -> NoObstacles(U,V).
72[0:Inp] || Object(U) NoObstacles(V,W) -> equal(U,Agent) DR(Place(V,U),W)*.
73[0:Inp] || Leq(U,V)* Time(U) Time(V) -> Lt(U,V) equal(U,V).
 This is a first-order Non-Horn problem containing equality.
 This is a problem that contains sort information.
 The conjecture is ground.
 Axiom clauses: 70 Conjecture clauses: 3
 Inferences: IEmS=1 ISoR=1 IEqR=1 IEqF=1 ISpR=1 ISpL=1 IORe=1 IOFc=1 
 Reductions: RFRew=1 RBRew=1 RFMRR=1 RBMRR=1 RObv=1 RUnC=1 RTaut=1 RSSi=1 RFSub=1 RBSub=1 RAED=1 RCon=1 
 Extras    : Input Saturation, Dynamic Selection, Full Splitting, Full Reduction,  Ratio: 5, FuncWeight: 1, VarWeight: 1
 Precedence: skf1 > skf0 > MovingGroup > Contents > UContents > RUnion > Union > Place > TravelTo > Leq3 > Leq > Lt > Region > SkP0 > DR > NoObstacles > Object > Time > UprightContainer > SkP1 > FullyOutside > ObjectSet > SmallSet > AllStable > EmptyHanded > Graspable > Reachable > SafelyMovable > SmallObject > BoxedIn > NoPartialContents > Action > Occurs > SkP2 > CanGrasp > UprightContainerShape > UContained > P > Element > Trajectory > StaysIn > Released > Grasp > Feasible > skc7 > skc6 > skc5 > skc4 > skc3 > skc2 > skc1 > skc0 > Rb > Ra > T > Ra1 > Tm1 > Agent > Ox4 > Rc4 > Ob4 > Ta4
 Ordering  : KBO
Processed Problem:

Worked Off Clauses:

Usable Clauses:
74[0:Res:2.0,32.0] ||  -> Region(skc4)*.
77[0:Res:1.0,32.0] ||  -> Region(skc5)*.
75[0:Res:2.0,33.0] ||  -> Time(skc3)*.
4[0:Inp] ||  -> NoObstacles(T,Rb)*.
3[0:Inp] ||  -> NoObstacles(T,Ra)*.
2[0:Inp] ||  -> NoObstacles(skc3,skc4)*.
1[0:Inp] ||  -> NoObstacles(skc3,skc5)*.
83[0:MRR:82.0,75.0] ||  -> Object(skf1(U,V))*.
5[0:Inp] SmallObject(U) ||  -> Object(U)*.
7[0:Inp] EmptyHanded(U) ||  -> Time(U)*.
6[0:Inp] AllStable(U) ||  -> Time(U)*.
8[0:Inp] || NoObstacles(skc3,RUnion(skc5,skc4))* -> .
23[0:Inp] || SmallSet(U,V)* -> ObjectSet(U).
12[0:Inp] || Element(U,V)* -> ObjectSet(V).
10[0:Inp] || Feasible(U,V)* -> Action(V).
24[0:Inp] || SmallSet(U,V)* -> Region(V).
18[0:Inp] || Reachable(U,V)* -> Region(V).
16[0:Inp] || FullyOutside(U,V)* -> Region(V).
15[0:Inp] || FullyOutside(U,V)* -> Region(U).
22[0:Inp] || SkP1(U,V)* -> Region(U).
21[0:Inp] || SkP1(U,V)* -> Region(V).
20[0:Inp] || SkP0(U,V)* -> Region(U).
19[0:Inp] || SkP0(U,V)* -> Region(V).
32[0:Inp] || NoObstacles(U,V)* -> Region(V).
30[0:Inp] || Graspable(U,V)* -> Object(V).
26[0:Inp] || NoPartialContents(U,V)* -> Object(V).
14[0:Inp] || SafelyMovable(U,V)* -> Object(V).
11[0:Inp] || Element(U,V)* -> Object(U).
28[0:Inp] || SkP2(U,V)* -> Object(U).
29[0:Inp] || Graspable(U,V)* -> Time(U).
25[0:Inp] || NoPartialContents(U,V)* -> Time(U).
17[0:Inp] || Reachable(U,V)* -> Time(U).
13[0:Inp] || SafelyMovable(U,V)* -> Time(U).
9[0:Inp] || Feasible(U,V)* -> Time(U).
27[0:Inp] || SkP2(U,V)* -> Time(V).
33[0:Inp] || NoObstacles(U,V)* -> Time(U).
84[0:MRR:81.0,75.0] || equal(skf1(U,V),Agent)** -> .
51[0:Inp] || Grasp(U,V) -> SkP2(V,U)*.
50[0:Inp] || CanGrasp(U,V) -> SkP2(V,U)*.
49[0:Inp] || UprightContainerShape(U,V) -> SkP1(V,U)*.
46[0:Inp] || P(U,V) -> SkP0(V,U)*.
48[0:Inp] || FullyOutside(U,V) -> SkP1(V,U)*.
47[0:Inp] || DR(U,V) -> SkP0(V,U)*.
36[0:Inp] || Occurs(U,V,W)* -> Action(W).
39[0:Inp] || UprightContainer(U,V,W)* -> Region(W).
54[0:Inp] || Released(U,V,W)* -> Object(W).
45[0:Inp] || BoxedIn(U,V,W)* -> Object(W).
44[0:Inp] || BoxedIn(U,V,W)* -> Object(V).
42[0:Inp] || UContained(U,V,W)* -> Object(W).
41[0:Inp] || UContained(U,V,W)* -> Object(V).
38[0:Inp] || UprightContainer(U,V,W)* -> Object(V).
57[0:Inp] || Trajectory(U,V,W)* -> Time(W).
56[0:Inp] || Trajectory(U,V,W)* -> Time(V).
55[0:Inp] || Trajectory(U,V,W)* -> Time(U).
53[0:Inp] || Released(U,V,W)* -> Time(V).
52[0:Inp] || Released(U,V,W)* -> Time(U).
43[0:Inp] || BoxedIn(U,V,W)* -> Time(U).
40[0:Inp] || UContained(U,V,W)* -> Time(U).
37[0:Inp] || UprightContainer(U,V,W)* -> Time(U).
35[0:Inp] || Occurs(U,V,W)* -> Time(V).
34[0:Inp] || Occurs(U,V,W)* -> Time(U).
63[0:Inp] || Leq3(U,V,W)* -> Leq(V,W).
62[0:Inp] || Leq3(U,V,W)* -> Leq(U,V).
61[0:Inp] || StaysIn(U,V,W,X)* -> Region(X).
60[0:Inp] || StaysIn(U,V,W,X)* -> Object(W).
59[0:Inp] || StaysIn(U,V,W,X)* -> Time(V).
58[0:Inp] || StaysIn(U,V,W,X)* -> Time(U).
65[0:Inp] || Lt(U,V)* Lt(W,U)* -> Lt(W,V)*.
76[0:Res:2.0,72.1] Object(U) ||  -> equal(U,Agent) DR(Place(skc3,U),skc4)*.
79[0:Res:1.0,72.1] Object(U) ||  -> equal(U,Agent) DR(Place(skc3,U),skc5)*.
66[0:Inp] || Leq(U,V) Leq(V,W) -> Leq3(U,V,W)*.
68[0:Inp] Time(U) Time(V) || Lt(V,U) -> Leq(V,U)*.
69[0:Inp] Time(U) Time(V) || equal(V,U) -> Leq(V,U)*.
70[0:Inp] || DR(U,V) DR(U,W) -> DR(U,RUnion(W,V))*.
71[0:Inp] Time(U) || DR(Place(U,skf1(V,U)),V)* -> NoObstacles(U,V).
72[0:Inp] Object(U) || NoObstacles(V,W) -> equal(U,Agent) DR(Place(V,U),W)*.
73[0:Inp] Time(U) Time(V) || Leq(V,U)* -> equal(V,U) Lt(V,U).
	Given clause: 74[0:Res:2.0,32.0] ||  -> Region(skc4)*.
	Given clause: 77[0:Res:1.0,32.0] ||  -> Region(skc5)*.
	Given clause: 75[0:Res:2.0,33.0] ||  -> Time(skc3)*.
	Given clause: 4[0:Inp] ||  -> NoObstacles(T,Rb)*.
	Given clause: 3[0:Inp] ||  -> NoObstacles(T,Ra)*.
	Given clause: 2[0:Inp] ||  -> NoObstacles(skc3,skc4)*.
	Given clause: 1[0:Inp] ||  -> NoObstacles(skc3,skc5)*.
	Given clause: 83[0:MRR:82.0,75.0] ||  -> Object(skf1(U,V))*.
	Given clause: 5[0:Inp] SmallObject(U) ||  -> Object(U)*.
	Given clause: 7[0:Inp] EmptyHanded(U) ||  -> Time(U)*.
	Given clause: 6[0:Inp] AllStable(U) ||  -> Time(U)*.
	Given clause: 8[0:Inp] || NoObstacles(skc3,RUnion(skc5,skc4))* -> .
	Given clause: 84[0:MRR:81.0,75.0] || equal(skf1(U,V),Agent)** -> .
	Given clause: 23[0:Inp] || SmallSet(U,V)* -> ObjectSet(U).
	Given clause: 12[0:Inp] || Element(U,V)* -> ObjectSet(V).
	Given clause: 10[0:Inp] || Feasible(U,V)* -> Action(V).
	Given clause: 24[0:Inp] || SmallSet(U,V)* -> Region(V).
	Given clause: 18[0:Inp] || Reachable(U,V)* -> Region(V).
	Given clause: 16[0:Inp] || FullyOutside(U,V)* -> Region(V).
	Given clause: 15[0:Inp] || FullyOutside(U,V)* -> Region(U).
	Given clause: 22[0:Inp] || SkP1(U,V)* -> Region(U).
	Given clause: 21[0:Inp] || SkP1(U,V)* -> Region(V).
	Given clause: 20[0:Inp] || SkP0(U,V)* -> Region(U).
	Given clause: 19[0:Inp] || SkP0(U,V)* -> Region(V).
	Given clause: 32[0:Inp] || NoObstacles(U,V)* -> Region(V).
	Given clause: 85[0:Res:4.0,32.0] ||  -> Region(Rb)*.
	Given clause: 86[0:Res:3.0,32.0] ||  -> Region(Ra)*.
	Given clause: 30[0:Inp] || Graspable(U,V)* -> Object(V).
	Given clause: 26[0:Inp] || NoPartialContents(U,V)* -> Object(V).
	Given clause: 14[0:Inp] || SafelyMovable(U,V)* -> Object(V).
	Given clause: 11[0:Inp] || Element(U,V)* -> Object(U).
	Given clause: 28[0:Inp] || SkP2(U,V)* -> Object(U).
	Given clause: 29[0:Inp] || Graspable(U,V)* -> Time(U).
	Given clause: 25[0:Inp] || NoPartialContents(U,V)* -> Time(U).
	Given clause: 17[0:Inp] || Reachable(U,V)* -> Time(U).
	Given clause: 13[0:Inp] || SafelyMovable(U,V)* -> Time(U).
	Given clause: 9[0:Inp] || Feasible(U,V)* -> Time(U).
	Given clause: 27[0:Inp] || SkP2(U,V)* -> Time(V).
	Given clause: 33[0:Inp] || NoObstacles(U,V)* -> Time(U).
	Given clause: 51[0:Inp] || Grasp(U,V) -> SkP2(V,U)*.
	Given clause: 89[0:Res:4.0,33.0] ||  -> Time(T)*.
	Given clause: 93[0:Res:51.1,27.0] || Grasp(U,V)* -> Time(U).
	Given clause: 94[0:Res:51.1,28.0] || Grasp(U,V)* -> Object(V).
	Given clause: 50[0:Inp] || CanGrasp(U,V) -> SkP2(V,U)*.
	Given clause: 49[0:Inp] || UprightContainerShape(U,V) -> SkP1(V,U)*.
	Given clause: 95[0:Res:50.1,27.0] || CanGrasp(U,V)* -> Time(U).
	Given clause: 96[0:Res:50.1,28.0] || CanGrasp(U,V)* -> Object(V).
	Given clause: 97[0:Res:49.1,21.0] || UprightContainerShape(U,V)* -> Region(U).
	Given clause: 98[0:Res:49.1,22.0] || UprightContainerShape(U,V)* -> Region(V).
	Given clause: 46[0:Inp] || P(U,V) -> SkP0(V,U)*.
	Given clause: 99[0:Res:46.1,19.0] || P(U,V)* -> Region(U).
	Given clause: 100[0:Res:46.1,20.0] || P(U,V)* -> Region(V).
	Given clause: 48[0:Inp] || FullyOutside(U,V) -> SkP1(V,U)*.
	Given clause: 47[0:Inp] || DR(U,V) -> SkP0(V,U)*.
	Given clause: 36[0:Inp] || Occurs(U,V,W)* -> Action(W).
	Given clause: 103[0:Res:47.1,19.0] || DR(U,V)* -> Region(U).
	Given clause: 104[0:Res:47.1,20.0] || DR(U,V)* -> Region(V).
	Given clause: 39[0:Inp] || UprightContainer(U,V,W)* -> Region(W).
	Given clause: 54[0:Inp] || Released(U,V,W)* -> Object(W).
	Given clause: 45[0:Inp] || BoxedIn(U,V,W)* -> Object(W).
	Given clause: 44[0:Inp] || BoxedIn(U,V,W)* -> Object(V).
	Given clause: 42[0:Inp] || UContained(U,V,W)* -> Object(W).
	Given clause: 41[0:Inp] || UContained(U,V,W)* -> Object(V).
	Given clause: 38[0:Inp] || UprightContainer(U,V,W)* -> Object(V).
	Given clause: 57[0:Inp] || Trajectory(U,V,W)* -> Time(W).
	Given clause: 56[0:Inp] || Trajectory(U,V,W)* -> Time(V).
	Given clause: 55[0:Inp] || Trajectory(U,V,W)* -> Time(U).
	Given clause: 53[0:Inp] || Released(U,V,W)* -> Time(V).
	Given clause: 52[0:Inp] || Released(U,V,W)* -> Time(U).
	Given clause: 43[0:Inp] || BoxedIn(U,V,W)* -> Time(U).
	Given clause: 40[0:Inp] || UContained(U,V,W)* -> Time(U).
	Given clause: 37[0:Inp] || UprightContainer(U,V,W)* -> Time(U).
	Given clause: 35[0:Inp] || Occurs(U,V,W)* -> Time(V).
	Given clause: 34[0:Inp] || Occurs(U,V,W)* -> Time(U).
	Given clause: 63[0:Inp] || Leq3(U,V,W)* -> Leq(V,W).
	Given clause: 62[0:Inp] || Leq3(U,V,W)* -> Leq(U,V).
	Given clause: 61[0:Inp] || StaysIn(U,V,W,X)* -> Region(X).
	Given clause: 60[0:Inp] || StaysIn(U,V,W,X)* -> Object(W).
	Given clause: 59[0:Inp] || StaysIn(U,V,W,X)* -> Time(V).
	Given clause: 58[0:Inp] || StaysIn(U,V,W,X)* -> Time(U).
	Given clause: 76[0:Res:2.0,72.1] Object(U) ||  -> equal(U,Agent) DR(Place(skc3,U),skc4)*.
	Given clause: 106[0:Res:76.2,103.0] Object(U) ||  -> equal(U,Agent) Region(Place(skc3,U))*.
	Given clause: 79[0:Res:1.0,72.1] Object(U) ||  -> equal(U,Agent) DR(Place(skc3,U),skc5)*.
	Given clause: 65[0:Inp] || Lt(U,V)*+ Lt(W,U)* -> Lt(W,V)*.
	Given clause: 66[0:Inp] || Leq(U,V) Leq(V,W) -> Leq3(U,V,W)*.
	Given clause: 68[0:Inp] Time(U) Time(V) || Lt(V,U) -> Leq(V,U)*.
	Given clause: 69[0:Inp] Time(U) Time(V) || equal(V,U) -> Leq(V,U)*.
	Given clause: 70[0:Inp] || DR(U,V) DR(U,W) -> DR(U,RUnion(W,V))*.
	Given clause: 111[0:Res:70.2,104.0] || DR(U,V)*+ DR(U,W)* -> Region(RUnion(W,V))*.
	Given clause: 71[0:Inp] Time(U) || DR(Place(U,skf1(V,U)),V)* -> NoObstacles(U,V).
	Given clause: 72[0:Inp] Object(U) || NoObstacles(V,W) -> equal(U,Agent) DR(Place(V,U),W)*.
	Given clause: 122[0:Res:72.3,103.0] Object(U) || NoObstacles(V,W)*+ -> equal(U,Agent) Region(Place(V,U))*.
	Given clause: 124[0:Res:4.0,122.1] Object(U) ||  -> equal(U,Agent) Region(Place(T,U))*.
	Given clause: 115[0:Res:76.2,111.0] Object(U) || DR(Place(skc3,U),V)* -> equal(U,Agent) Region(RUnion(V,skc4)).
	Given clause: 73[0:Inp] Time(U) Time(V) || Leq(V,U)* -> equal(V,U) Lt(V,U).
	Given clause: 132[0:Obv:129.2] Object(U) ||  -> equal(U,Agent)* Region(RUnion(skc4,skc4))*.
	Given clause: 137[1:Spt:132.0,132.1] Object(U) ||  -> equal(U,Agent)*.
	Given clause: 141[1:Spt:140.0,132.2] ||  -> Region(RUnion(skc4,skc4))*.
	Given clause: 133[0:Obv:130.2] Object(U) ||  -> equal(U,Agent)* Region(RUnion(skc5,skc4))*.
	Given clause: 142[2:Spt:133.0,133.1] Object(U) ||  -> equal(U,Agent)*.
	Given clause: 146[2:Spt:145.0,133.2] ||  -> Region(RUnion(skc5,skc4))*.
	Given clause: 106[0:Res:76.2,103.0] Object(U) ||  -> equal(U,Agent) Region(Place(skc3,U))*.
	Given clause: 124[0:Res:4.0,122.1] Object(U) ||  -> equal(U,Agent) Region(Place(T,U))*.
	Given clause: 72[0:Inp] Object(U) || NoObstacles(V,W) -> equal(U,Agent) DR(Place(V,U),W)*.
	Given clause: 76[0:Res:2.0,72.1] Object(U) ||  -> equal(U,Agent) DR(Place(skc3,U),skc4)*.
	Given clause: 79[0:Res:1.0,72.1] Object(U) ||  -> equal(U,Agent) DR(Place(skc3,U),skc5)*.
	Given clause: 134[0:Obv:131.3] Object(U) || NoObstacles(skc3,V)+ -> equal(U,Agent)* Region(RUnion(V,skc4))*.
	Given clause: 159[3:Spt:134.0,134.2] Object(U) ||  -> equal(U,Agent)*.
	Given clause: 163[3:Spt:162.0,134.1,134.3] || NoObstacles(skc3,U) -> Region(RUnion(U,skc4))*.
	Given clause: 106[0:Res:76.2,103.0] Object(U) ||  -> equal(U,Agent) Region(Place(skc3,U))*.
	Given clause: 72[0:Inp] Object(U) || NoObstacles(V,W) -> equal(U,Agent) DR(Place(V,U),W)*.
	Given clause: 124[0:Res:4.0,122.1] Object(U) ||  -> equal(U,Agent) Region(Place(T,U))*.
	Given clause: 76[0:Res:2.0,72.1] Object(U) ||  -> equal(U,Agent) DR(Place(skc3,U),skc4)*.
	Given clause: 79[0:Res:1.0,72.1] Object(U) ||  -> equal(U,Agent) DR(Place(skc3,U),skc5)*.
	Given clause: 122[0:Res:72.3,103.0] Object(U) || NoObstacles(V,W)*+ -> equal(U,Agent) Region(Place(V,U))*.
	Given clause: 117[0:Res:70.2,71.1] Time(U) || DR(Place(U,skf1(RUnion(V,W),U)),W)*+ DR(Place(U,skf1(RUnion(V,W),U)),V)* -> NoObstacles(U,RUnion(V,W)).
	Given clause: 185[0:MRR:184.1,84.0] || DR(Place(skc3,skf1(RUnion(U,skc5),skc3)),U)* -> NoObstacles(skc3,RUnion(U,skc5)).
	Given clause: 195[0:MRR:194.0,84.0] ||  -> NoObstacles(skc3,RUnion(skc4,skc5))*.
	Given clause: 201[0:Res:195.0,32.0] ||  -> Region(RUnion(skc4,skc5))*.
	Given clause: 197[0:MRR:196.0,84.0] ||  -> NoObstacles(skc3,RUnion(skc5,skc5))*.
	Given clause: 187[0:MRR:186.1,84.0] || DR(Place(skc3,skf1(RUnion(U,skc4),skc3)),U)* -> NoObstacles(skc3,RUnion(U,skc4)).
SPASS V 3.5 
SPASS beiseite: Proof found.
Problem: e.dfg 
SPASS derived 111 clauses, backtracked 36 clauses, performed 3 splits and kept 164 clauses.
SPASS allocated 52505 KBytes.
SPASS spent	0:00:00.04 on the problem.
		0:00:00.01 for the input.
		0:00:00.01 for the FLOTTER CNF translation.
		0:00:00.00 for inferences.
		0:00:00.00 for the backtracking.
		0:00:00.00 for the reduction.


Here is a proof with depth 6, length 40 :
1[0:Inp] ||  -> NoObstacles(skc3,skc5)*.
2[0:Inp] ||  -> NoObstacles(skc3,skc4)*.
8[0:Inp] || NoObstacles(skc3,RUnion(skc5,skc4))* -> .
20[0:Inp] || SkP0(U,V)* -> Region(U).
33[0:Inp] || NoObstacles(U,V)* -> Time(U).
47[0:Inp] || DR(U,V) -> SkP0(V,U)*.
64[0:Inp] Time(U) ||  -> Object(skf1(V,W))* NoObstacles(U,X)*.
67[0:Inp] Time(U) || equal(skf1(V,W),Agent)** -> NoObstacles(U,X)*.
70[0:Inp] || DR(U,V) DR(U,W) -> DR(U,RUnion(W,V))*.
71[0:Inp] Time(U) || DR(Place(U,skf1(V,U)),V)* -> NoObstacles(U,V).
72[0:Inp] Object(U) || NoObstacles(V,W) -> equal(U,Agent) DR(Place(V,U),W)*.
75[0:Res:2.0,33.0] ||  -> Time(skc3)*.
76[0:Res:2.0,72.1] Object(U) ||  -> equal(U,Agent) DR(Place(skc3,U),skc4)*.
79[0:Res:1.0,72.1] Object(U) ||  -> equal(U,Agent) DR(Place(skc3,U),skc5)*.
81[0:Res:67.2,8.0] Time(skc3) || equal(skf1(U,V),Agent)** -> .
82[0:Res:64.2,8.0] Time(skc3) ||  -> Object(skf1(U,V))*.
83[0:MRR:82.0,75.0] ||  -> Object(skf1(U,V))*.
84[0:MRR:81.0,75.0] || equal(skf1(U,V),Agent)** -> .
104[0:Res:47.1,20.0] || DR(U,V)* -> Region(V).
111[0:Res:70.2,104.0] || DR(U,V)*+ DR(U,W)* -> Region(RUnion(W,V))*.
115[0:Res:76.2,111.0] Object(U) || DR(Place(skc3,U),V)* -> equal(U,Agent) Region(RUnion(V,skc4)).
117[0:Res:70.2,71.1] Time(U) || DR(Place(U,skf1(RUnion(V,W),U)),W)*+ DR(Place(U,skf1(RUnion(V,W),U)),V)* -> NoObstacles(U,RUnion(V,W)).
129[0:Res:76.2,115.1] Object(U) Object(U) ||  -> equal(U,Agent)* equal(U,Agent)* Region(RUnion(skc4,skc4))*.
130[0:Res:79.2,115.1] Object(U) Object(U) ||  -> equal(U,Agent)* equal(U,Agent)* Region(RUnion(skc5,skc4))*.
132[0:Obv:129.2] Object(U) ||  -> equal(U,Agent)* Region(RUnion(skc4,skc4))*.
133[0:Obv:130.2] Object(U) ||  -> equal(U,Agent)* Region(RUnion(skc5,skc4))*.
137[1:Spt:132.0,132.1] Object(U) ||  -> equal(U,Agent)*.
139[1:EmS:137.0,83.0] ||  -> equal(skf1(U,V),Agent)**.
140[1:MRR:139.0,84.0] ||  -> .
141[1:Spt:140.0,132.2] ||  -> Region(RUnion(skc4,skc4))*.
142[2:Spt:133.0,133.1] Object(U) ||  -> equal(U,Agent)*.
144[2:EmS:142.0,83.0] ||  -> equal(skf1(U,V),Agent)**.
145[2:MRR:144.0,84.0] ||  -> .
146[2:Spt:145.0,133.2] ||  -> Region(RUnion(skc5,skc4))*.
182[0:Res:76.2,117.1] Object(skf1(RUnion(U,skc4),skc3)) Time(skc3) || DR(Place(skc3,skf1(RUnion(U,skc4),skc3)),U)* -> equal(skf1(RUnion(U,skc4),skc3),Agent) NoObstacles(skc3,RUnion(U,skc4)).
186[0:SSi:182.1,182.0,75.0,83.0,75.0] || DR(Place(skc3,skf1(RUnion(U,skc4),skc3)),U)* -> equal(skf1(RUnion(U,skc4),skc3),Agent) NoObstacles(skc3,RUnion(U,skc4)).
187[0:MRR:186.1,84.0] || DR(Place(skc3,skf1(RUnion(U,skc4),skc3)),U)* -> NoObstacles(skc3,RUnion(U,skc4)).
209[0:Res:79.2,187.0] Object(skf1(RUnion(skc5,skc4),skc3)) ||  -> equal(skf1(RUnion(skc5,skc4),skc3),Agent)** NoObstacles(skc3,RUnion(skc5,skc4)).
212[2:SSi:209.0,83.0,146.0,75.0] ||  -> equal(skf1(RUnion(skc5,skc4),skc3),Agent)** NoObstacles(skc3,RUnion(skc5,skc4)).
213[2:MRR:212.0,212.1,84.0,8.0] ||  -> .
Formulae used in the proof : conjecture0 axiom10 axiom25 axiom26

--------------------------SPASS-STOP------------------------------
