
--------------------------SPASS-START-----------------------------
Input Problem:
1[0:Inp] ||  -> SmallObject(skc3)*.
2[0:Inp] ||  -> UContained(skc4,Agent,skc3)*.
3[0:Inp] || SmallObject(U)* -> Object(U).
4[0:Inp] || IntConn(U) -> Region(U)*.
5[0:Inp] || AllStable(U) -> Time(U)*.
6[0:Inp] || EmptyHanded(U) -> Time(U)*.
7[0:Inp] || Feasible(U,V)* -> Time(U).
8[0:Inp] || Feasible(U,V)* -> Action(V).
9[0:Inp] || Element(U,V)* -> Object(U).
10[0:Inp] || Element(U,V)* -> ObjectSet(V).
11[0:Inp] || FeasiblePlace(U,V)* -> Object(U).
12[0:Inp] || FeasiblePlace(U,V)* -> Region(V).
13[0:Inp] || Fits(U,V)* -> ObjectSet(U).
14[0:Inp] || Fits(U,V)* -> Region(V).
15[0:Inp] || OMuchSmaller(U,V)* -> Object(U).
16[0:Inp] || OMuchSmaller(U,V)* -> Region(V).
17[0:Inp] || SafelyMovable(U,V)* -> Time(U).
18[0:Inp] || SafelyMovable(U,V)* -> Object(V).
19[0:Inp] || FullyOutside(U,V)* -> Region(U).
20[0:Inp] || FullyOutside(U,V)* -> Region(V).
21[0:Inp] || Reachable(U,V)* -> Time(U).
22[0:Inp] || Reachable(U,V)* -> Region(V).
23[0:Inp] || P(U,V)* -> Region(U).
24[0:Inp] || P(U,V)* -> Region(V).
25[0:Inp] || SkP1(U,V)* -> Region(V).
26[0:Inp] || SkP1(U,V)* -> Region(U).
27[0:Inp] || OpenContained(U,V)* -> Region(U).
28[0:Inp] || OpenContained(U,V)* -> Region(V).
29[0:Inp] || SmallSet(U,V)* -> ObjectSet(U).
30[0:Inp] || SmallSet(U,V)* -> Region(V).
31[0:Inp] || MuchSmaller(U,V)* -> Region(U).
32[0:Inp] || MuchSmaller(U,V)* -> Region(V).
33[0:Inp] || NoPartialContents(U,V)* -> Time(U).
34[0:Inp] || NoPartialContents(U,V)* -> Object(V).
35[0:Inp] || CanGrasp(U,V)* -> Time(U).
36[0:Inp] || CanGrasp(U,V)* -> Object(V).
37[0:Inp] || Graspable(U,V)* -> Time(U).
38[0:Inp] || Graspable(U,V)* -> Object(V).
39[0:Inp] ||  -> FeasiblePlace(Agent,skf6(U))* SmallObject(V)*.
40[0:Inp] || Occurs(U,V,W)* -> Time(U).
41[0:Inp] || Occurs(U,V,W)* -> Time(V).
42[0:Inp] || Occurs(U,V,W)* -> Action(W).
43[0:Inp] || OSPlace(U,V,W)* -> Time(U).
44[0:Inp] || OSPlace(U,V,W)* -> ObjectSet(V).
45[0:Inp] || OSPlace(U,V,W)* -> Region(W).
46[0:Inp] || SkP0(U,V,W)* -> Time(W).
47[0:Inp] || SkP0(U,V,W)* -> Object(V).
48[0:Inp] || SkP0(U,V,W)* -> Region(U).
49[0:Inp] || UContained(U,V,W)* -> Time(U).
50[0:Inp] || UContained(U,V,W)* -> Object(V).
51[0:Inp] || UContained(U,V,W)* -> Object(W).
52[0:Inp] || BoxedIn(U,V,W)* -> Time(U).
53[0:Inp] || BoxedIn(U,V,W)* -> Object(V).
54[0:Inp] || BoxedIn(U,V,W)* -> Object(W).
55[0:Inp] || FullyOutside(U,V) -> SkP1(V,U)*.
56[0:Inp] || OpenContainerShape(U,V) -> SkP1(V,U)*.
57[0:Inp] || UprightContainerShape(U,V) -> SkP1(V,U)*.
58[0:Inp] || OMuchSmaller(U,skf6(U))* -> SmallObject(U).
59[0:Inp] || UprightContainer(U,V,W)* -> Time(U).
60[0:Inp] || UprightContainer(U,V,W)* -> Object(V).
61[0:Inp] || UContained(U,V,W)* -> Object(V).
62[0:Inp] || UprightContainerShape(U,V) -> OpenContainerShape(U,V)*.
63[0:Inp] || Leq3(U,V,W)* -> Leq(U,V).
64[0:Inp] || Leq3(U,V,W)* -> Leq(V,W).
65[0:Inp] ||  -> FeasiblePlace(U,skf5(V,U))* OMuchSmaller(U,V).
66[0:Inp] || MuchSmaller(U,V) OpenContained(V,U)* -> .
67[0:Inp] || OpenContainer(U,V,W) -> SkP0(W,V,U)*.
68[0:Inp] || UprightContainer(U,V,W) -> SkP0(W,V,U)*.
69[0:Inp] || MuchSmaller(skf5(U,V),U)* -> OMuchSmaller(W,U)*.
70[0:Inp] || OpenContained(U,V) -> OpenContainerShape(V,skf9(U,V))*.
71[0:Inp] || OpenContained(U,V)* -> P(U,skf9(U,W))*.
72[0:Inp] || SmallObject(U) FeasiblePlace(Agent,V)* -> OMuchSmaller(U,V)*.
73[0:Inp] || UprightContainer(U,V,W) -> UprightContainerShape(Place(U,V),W)*.
74[0:Inp] || Lt(U,V)* Lt(V,W)* -> Lt(U,W)*.
75[0:Inp] || OMuchSmaller(U,V)* FeasiblePlace(U,W)* -> MuchSmaller(W,V)*.
76[0:Inp] || Object(U) Time(V)* -> Time(W)* FeasiblePlace(U,X)*.
77[0:Inp] || OpenContainerShape(U,V)* P(W,V)* -> OpenContained(W,U)*.
78[0:Inp] || Leq(U,V) Leq(W,U) -> Leq3(W,U,V)*.
79[0:Inp] || UContained(U,V,W) -> UprightContainer(U,W,skf8(V,U,W))*.
80[0:Inp] || Lt(U,V) Time(U) Time(V) -> Leq(U,V)*.
81[0:Inp] || equal(U,V) Time(U) Time(V) -> Leq(U,V)*.
82[0:Inp] || UContained(U,V,W)* -> P(Place(U,V),skf8(V,U,X))*.
83[0:Inp] || equal(Place(U,V),W)* Object(V) Time(X)* -> FeasiblePlace(V,W)*.
84[0:Inp] || Leq(U,V)* Time(U) Time(V) -> Lt(U,V) equal(U,V).
85[0:Inp] || UprightContainerShape(Place(U,V),W)* Object(V) Time(U) -> UprightContainer(U,V,W).
86[0:Inp] || FeasiblePlace(U,V) Time(skc8) Object(U) -> equal(Place(skf7(V,U),U),V)**.
87[0:Inp] || UprightContainer(U,V,W)* P(Place(U,X),W)* Object(X) -> UContained(U,X,V)*.
 This is a first-order Non-Horn problem containing equality.
 This is a problem that contains sort information.
 The conjecture is ground.
 Axiom clauses: 85 Conjecture clauses: 2
 Inferences: IEmS=1 ISoR=1 IEqR=1 IEqF=1 ISpR=1 ISpL=1 IORe=1 IOFc=1 
 Reductions: RFRew=1 RBRew=1 RFMRR=1 RBMRR=1 RObv=1 RUnC=1 RTaut=1 RSSi=1 RFSub=1 RBSub=1 RAED=1 RCon=1 
 Extras    : Input Saturation, Dynamic Selection, Full Splitting, Full Reduction,  Ratio: 5, FuncWeight: 1, VarWeight: 1
 Precedence: skf8 > skf3 > skf9 > skf7 > skf5 > skf4 > skf2 > skf0 > RUnion > MovingGroup > Contents > UContents > Union > Place > skf6 > skf1 > TravelTo > Region > SkP1 > Leq3 > Leq > Lt > SkP0 > OpenContainerShape > OpenContained > FeasiblePlace > OMuchSmaller > MuchSmaller > P > UContained > UprightContainerShape > SmallObject > UprightContainer > Object > Time > FullyOutside > ObjectSet > SmallSet > AllStable > EmptyHanded > Graspable > Reachable > SafelyMovable > BoxedIn > NoPartialContents > Action > Occurs > CanGrasp > Element > IntConn > Feasible > Fits > OSPlace > OpenContainer > skc14 > skc13 > skc12 > skc11 > skc10 > skc9 > skc8 > skc7 > skc6 > skc5 > skc4 > skc3 > skc2 > skc1 > skc0 > O > Null > Rd > R > T > Ta > Ra1 > Tm1 > Agent > Ox4 > Rc4 > Ob4 > Ta4
 Ordering  : KBO
Processed Problem:

Worked Off Clauses:

Usable Clauses:
1[0:Inp] ||  -> SmallObject(skc3)*.
90[0:Res:1.0,3.0] ||  -> Object(skc3)*.
95[0:Res:2.0,61.0] ||  -> Object(Agent)*.
93[0:Res:2.0,49.0] ||  -> Time(skc4)*.
2[0:Inp] ||  -> UContained(skc4,Agent,skc3)*.
4[0:Inp] IntConn(U) ||  -> Region(U)*.
3[0:Inp] SmallObject(U) ||  -> Object(U)*.
6[0:Inp] EmptyHanded(U) ||  -> Time(U)*.
5[0:Inp] AllStable(U) ||  -> Time(U)*.
39[0:Inp] ||  -> SmallObject(U)* FeasiblePlace(Agent,skf6(V))*.
8[0:Inp] || Feasible(U,V)* -> Action(V).
29[0:Inp] || SmallSet(U,V)* -> ObjectSet(U).
13[0:Inp] || Fits(U,V)* -> ObjectSet(U).
10[0:Inp] || Element(U,V)* -> ObjectSet(V).
30[0:Inp] || SmallSet(U,V)* -> Region(V).
22[0:Inp] || Reachable(U,V)* -> Region(V).
14[0:Inp] || Fits(U,V)* -> Region(V).
20[0:Inp] || FullyOutside(U,V)* -> Region(V).
19[0:Inp] || FullyOutside(U,V)* -> Region(U).
32[0:Inp] || MuchSmaller(U,V)* -> Region(V).
31[0:Inp] || MuchSmaller(U,V)* -> Region(U).
26[0:Inp] || SkP1(U,V)* -> Region(U).
25[0:Inp] || SkP1(U,V)* -> Region(V).
28[0:Inp] || OpenContained(U,V)* -> Region(V).
27[0:Inp] || OpenContained(U,V)* -> Region(U).
24[0:Inp] || P(U,V)* -> Region(V).
23[0:Inp] || P(U,V)* -> Region(U).
16[0:Inp] || OMuchSmaller(U,V)* -> Region(V).
12[0:Inp] || FeasiblePlace(U,V)* -> Region(V).
38[0:Inp] || Graspable(U,V)* -> Object(V).
36[0:Inp] || CanGrasp(U,V)* -> Object(V).
34[0:Inp] || NoPartialContents(U,V)* -> Object(V).
18[0:Inp] || SafelyMovable(U,V)* -> Object(V).
9[0:Inp] || Element(U,V)* -> Object(U).
15[0:Inp] || OMuchSmaller(U,V)* -> Object(U).
11[0:Inp] || FeasiblePlace(U,V)* -> Object(U).
37[0:Inp] || Graspable(U,V)* -> Time(U).
35[0:Inp] || CanGrasp(U,V)* -> Time(U).
33[0:Inp] || NoPartialContents(U,V)* -> Time(U).
21[0:Inp] || Reachable(U,V)* -> Time(U).
17[0:Inp] || SafelyMovable(U,V)* -> Time(U).
7[0:Inp] || Feasible(U,V)* -> Time(U).
58[0:Inp] || OMuchSmaller(U,skf6(U))* -> SmallObject(U).
62[0:Inp] || UprightContainerShape(U,V) -> OpenContainerShape(U,V)*.
55[0:Inp] || FullyOutside(U,V) -> SkP1(V,U)*.
57[0:Inp] || UprightContainerShape(U,V) -> SkP1(V,U)*.
56[0:Inp] || OpenContainerShape(U,V) -> SkP1(V,U)*.
42[0:Inp] || Occurs(U,V,W)* -> Action(W).
44[0:Inp] || OSPlace(U,V,W)* -> ObjectSet(V).
45[0:Inp] || OSPlace(U,V,W)* -> Region(W).
48[0:Inp] || SkP0(U,V,W)* -> Region(U).
54[0:Inp] || BoxedIn(U,V,W)* -> Object(W).
53[0:Inp] || BoxedIn(U,V,W)* -> Object(V).
47[0:Inp] || SkP0(U,V,W)* -> Object(V).
61[0:Inp] || UContained(U,V,W)* -> Object(V).
51[0:Inp] || UContained(U,V,W)* -> Object(W).
60[0:Inp] || UprightContainer(U,V,W)* -> Object(V).
52[0:Inp] || BoxedIn(U,V,W)* -> Time(U).
43[0:Inp] || OSPlace(U,V,W)* -> Time(U).
41[0:Inp] || Occurs(U,V,W)* -> Time(V).
40[0:Inp] || Occurs(U,V,W)* -> Time(U).
46[0:Inp] || SkP0(U,V,W)* -> Time(W).
49[0:Inp] || UContained(U,V,W)* -> Time(U).
59[0:Inp] || UprightContainer(U,V,W)* -> Time(U).
92[0:Res:2.0,79.0] ||  -> UprightContainer(skc4,skc3,skf8(Agent,skc4,skc3))*.
89[0:Res:1.0,72.0] || FeasiblePlace(Agent,U)* -> OMuchSmaller(skc3,U).
65[0:Inp] ||  -> OMuchSmaller(U,V) FeasiblePlace(U,skf5(V,U))*.
66[0:Inp] || OpenContained(U,V)* MuchSmaller(V,U) -> .
64[0:Inp] || Leq3(U,V,W)* -> Leq(V,W).
63[0:Inp] || Leq3(U,V,W)* -> Leq(U,V).
91[0:Res:2.0,82.0] ||  -> P(Place(skc4,Agent),skf8(Agent,skc4,U))*.
70[0:Inp] || OpenContained(U,V) -> OpenContainerShape(V,skf9(U,V))*.
67[0:Inp] || OpenContainer(U,V,W) -> SkP0(W,V,U)*.
68[0:Inp] || UprightContainer(U,V,W) -> SkP0(W,V,U)*.
71[0:Inp] || OpenContained(U,V)* -> P(U,skf9(U,W))*.
69[0:Inp] || MuchSmaller(skf5(U,V),U)* -> OMuchSmaller(W,U)*.
72[0:Inp] SmallObject(U) || FeasiblePlace(Agent,V)* -> OMuchSmaller(U,V)*.
73[0:Inp] || UprightContainer(U,V,W) -> UprightContainerShape(Place(U,V),W)*.
74[0:Inp] || Lt(U,V)* Lt(W,U)* -> Lt(W,V)*.
75[0:Inp] || FeasiblePlace(U,V)* OMuchSmaller(U,W)* -> MuchSmaller(V,W)*.
77[0:Inp] || P(U,V)* OpenContainerShape(W,V)* -> OpenContained(U,W)*.
76[0:Inp] Time(U) Object(V) ||  -> Time(W)* FeasiblePlace(V,X)*.
79[0:Inp] || UContained(U,V,W) -> UprightContainer(U,W,skf8(V,U,W))*.
78[0:Inp] || Leq(U,V) Leq(V,W) -> Leq3(U,V,W)*.
80[0:Inp] Time(U) Time(V) || Lt(V,U) -> Leq(V,U)*.
81[0:Inp] Time(U) Time(V) || equal(V,U) -> Leq(V,U)*.
82[0:Inp] || UContained(U,V,W)* -> P(Place(U,V),skf8(V,U,X))*.
88[0:MRR:86.0,11.1] || Time(skc8) FeasiblePlace(U,V) -> equal(Place(skf7(V,U),U),V)**.
83[0:Inp] Time(U) Object(V) || equal(Place(W,V),X)* -> FeasiblePlace(V,X)*.
84[0:Inp] Time(U) Time(V) || Leq(V,U)* -> equal(V,U) Lt(V,U).
85[0:Inp] Time(U) Object(V) || UprightContainerShape(Place(U,V),W)* -> UprightContainer(U,V,W).
87[0:Inp] Object(U) || P(Place(V,U),W)* UprightContainer(V,X,W)* -> UContained(V,U,X)*.
	Given clause: 39[0:Inp] ||  -> SmallObject(U)* FeasiblePlace(Agent,skf6(V))*.
	Given clause: 96[1:Spt:39.0] ||  -> SmallObject(U)*.
	Given clause: 93[0:Res:2.0,49.0] ||  -> Time(skc4)*.
	Given clause: 97[1:MRR:3.0,96.0] ||  -> Object(U)*.
	Given clause: 2[0:Inp] ||  -> UContained(skc4,Agent,skc3)*.
	Given clause: 4[0:Inp] IntConn(U) ||  -> Region(U)*.
	Given clause: 6[0:Inp] EmptyHanded(U) ||  -> Time(U)*.
	Given clause: 5[0:Inp] AllStable(U) ||  -> Time(U)*.
	Given clause: 8[0:Inp] || Feasible(U,V)* -> Action(V).
	Given clause: 29[0:Inp] || SmallSet(U,V)* -> ObjectSet(U).
	Given clause: 13[0:Inp] || Fits(U,V)* -> ObjectSet(U).
	Given clause: 10[0:Inp] || Element(U,V)* -> ObjectSet(V).
	Given clause: 30[0:Inp] || SmallSet(U,V)* -> Region(V).
	Given clause: 22[0:Inp] || Reachable(U,V)* -> Region(V).
	Given clause: 14[0:Inp] || Fits(U,V)* -> Region(V).
	Given clause: 20[0:Inp] || FullyOutside(U,V)* -> Region(V).
	Given clause: 19[0:Inp] || FullyOutside(U,V)* -> Region(U).
	Given clause: 32[0:Inp] || MuchSmaller(U,V)* -> Region(V).
	Given clause: 31[0:Inp] || MuchSmaller(U,V)* -> Region(U).
	Given clause: 26[0:Inp] || SkP1(U,V)* -> Region(U).
	Given clause: 25[0:Inp] || SkP1(U,V)* -> Region(V).
	Given clause: 28[0:Inp] || OpenContained(U,V)* -> Region(V).
	Given clause: 27[0:Inp] || OpenContained(U,V)* -> Region(U).
	Given clause: 24[0:Inp] || P(U,V)* -> Region(V).
	Given clause: 23[0:Inp] || P(U,V)* -> Region(U).
	Given clause: 16[0:Inp] || OMuchSmaller(U,V)* -> Region(V).
	Given clause: 12[0:Inp] || FeasiblePlace(U,V)* -> Region(V).
	Given clause: 37[0:Inp] || Graspable(U,V)* -> Time(U).
	Given clause: 35[0:Inp] || CanGrasp(U,V)* -> Time(U).
	Given clause: 33[0:Inp] || NoPartialContents(U,V)* -> Time(U).
	Given clause: 21[0:Inp] || Reachable(U,V)* -> Time(U).
	Given clause: 17[0:Inp] || SafelyMovable(U,V)* -> Time(U).
	Given clause: 7[0:Inp] || Feasible(U,V)* -> Time(U).
	Given clause: 92[0:Res:2.0,79.0] ||  -> UprightContainer(skc4,skc3,skf8(Agent,skc4,skc3))*.
	Given clause: 98[1:MRR:72.0,96.0] || FeasiblePlace(Agent,U)*+ -> OMuchSmaller(V,U)*.
	Given clause: 62[0:Inp] || UprightContainerShape(U,V) -> OpenContainerShape(U,V)*.
	Given clause: 55[0:Inp] || FullyOutside(U,V) -> SkP1(V,U)*.
	Given clause: 57[0:Inp] || UprightContainerShape(U,V) -> SkP1(V,U)*.
	Given clause: 105[0:Res:57.1,25.0] || UprightContainerShape(U,V)* -> Region(U).
	Given clause: 106[0:Res:57.1,26.0] || UprightContainerShape(U,V)* -> Region(V).
	Given clause: 56[0:Inp] || OpenContainerShape(U,V) -> SkP1(V,U)*.
	Given clause: 42[0:Inp] || Occurs(U,V,W)* -> Action(W).
	Given clause: 107[0:Res:56.1,25.0] || OpenContainerShape(U,V)* -> Region(U).
	Given clause: 108[0:Res:56.1,26.0] || OpenContainerShape(U,V)* -> Region(V).
	Given clause: 44[0:Inp] || OSPlace(U,V,W)* -> ObjectSet(V).
	Given clause: 45[0:Inp] || OSPlace(U,V,W)* -> Region(W).
	Given clause: 48[0:Inp] || SkP0(U,V,W)* -> Region(U).
	Given clause: 52[0:Inp] || BoxedIn(U,V,W)* -> Time(U).
	Given clause: 43[0:Inp] || OSPlace(U,V,W)* -> Time(U).
	Given clause: 41[0:Inp] || Occurs(U,V,W)* -> Time(V).
	Given clause: 40[0:Inp] || Occurs(U,V,W)* -> Time(U).
	Given clause: 46[0:Inp] || SkP0(U,V,W)* -> Time(W).
	Given clause: 49[0:Inp] || UContained(U,V,W)* -> Time(U).
	Given clause: 59[0:Inp] || UprightContainer(U,V,W)* -> Time(U).
	Given clause: 91[0:Res:2.0,82.0] ||  -> P(Place(skc4,Agent),skf8(Agent,skc4,U))*.
	Given clause: 113[0:Res:91.0,23.0] ||  -> Region(Place(skc4,Agent))*.
	Given clause: 66[0:Inp] || OpenContained(U,V)* MuchSmaller(V,U) -> .
	Given clause: 114[0:Res:91.0,24.0] ||  -> Region(skf8(Agent,skc4,U))*.
	Given clause: 100[1:MRR:76.1,97.0] Time(U) ||  -> Time(V)* FeasiblePlace(W,X)*.
	Given clause: 117[1:EmS:100.0,93.0] ||  -> Time(U)* FeasiblePlace(V,W)*.
	Given clause: 119[2:Spt:117.0] ||  -> Time(U)*.
	Given clause: 120[2:MRR:81.1,81.0,119.0] || equal(U,V) -> Leq(U,V)*.
	Given clause: 121[2:MRR:80.1,80.0,119.0] || Lt(U,V) -> Leq(U,V)*.
	Given clause: 65[0:Inp] ||  -> OMuchSmaller(U,V) FeasiblePlace(U,skf5(V,U))*.
	Given clause: 125[0:Res:65.1,12.0] ||  -> OMuchSmaller(U,V) Region(skf5(V,U))*.
	Given clause: 126[1:Res:65.1,98.0] ||  -> OMuchSmaller(Agent,U) OMuchSmaller(V,skf5(U,Agent))*.
	Given clause: 64[0:Inp] || Leq3(U,V,W)* -> Leq(V,W).
	Given clause: 63[0:Inp] || Leq3(U,V,W)* -> Leq(U,V).
	Given clause: 70[0:Inp] || OpenContained(U,V) -> OpenContainerShape(V,skf9(U,V))*.
	Given clause: 128[0:Res:70.1,108.0] || OpenContained(U,V) -> Region(skf9(U,V))*.
	Given clause: 71[0:Inp] || OpenContained(U,V)*+ -> P(U,skf9(U,W))*.
	Given clause: 69[0:Inp] || MuchSmaller(skf5(U,V),U)*+ -> OMuchSmaller(W,U)*.
	Given clause: 118[1:MRR:101.0,117.0] || equal(Place(U,V),W)*+ -> FeasiblePlace(V,W)*.
	Given clause: 130[1:EqR:118.0] ||  -> FeasiblePlace(U,Place(V,U))*.
	Given clause: 131[1:Res:130.0,12.0] ||  -> Region(Place(U,V))*.
	Given clause: 132[1:Res:130.0,98.0] ||  -> OMuchSmaller(U,Place(V,Agent))*.
	Given clause: 67[0:Inp] || OpenContainer(U,V,W) -> SkP0(W,V,U)*.
	Given clause: 68[0:Inp] || UprightContainer(U,V,W) -> SkP0(W,V,U)*.
	Given clause: 134[0:Res:67.1,48.0] || OpenContainer(U,V,W)* -> Region(W).
	Given clause: 135[0:Res:68.1,48.0] || UprightContainer(U,V,W)* -> Region(W).
	Given clause: 73[0:Inp] || UprightContainer(U,V,W) -> UprightContainerShape(Place(U,V),W)*.
	Given clause: 122[2:MRR:84.1,84.0,119.0] || Leq(U,V)* -> equal(U,V) Lt(U,V).
	Given clause: 123[2:MRR:102.0,119.0] || UprightContainerShape(Place(U,V),W)* -> UprightContainer(U,V,W).
	Given clause: 74[0:Inp] || Lt(U,V)*+ Lt(W,U)* -> Lt(W,V)*.
	Given clause: 75[0:Inp] || FeasiblePlace(U,V)*+ OMuchSmaller(U,W)* -> MuchSmaller(V,W)*.
	Given clause: 143[1:Res:130.0,75.0] || OMuchSmaller(U,V) -> MuchSmaller(Place(W,U),V)*.
	Given clause: 77[0:Inp] || P(U,V)*+ OpenContainerShape(W,V)* -> OpenContained(U,W)*.
	Given clause: 124[2:MRR:88.0,119.0] || FeasiblePlace(U,V) -> equal(Place(skf7(V,U),U),V)**.
	Given clause: 153[2:SpL:124.1,118.0] || FeasiblePlace(U,V)*+ equal(V,W)* -> FeasiblePlace(U,W)*.
	Given clause: 146[0:Res:91.0,77.0] || OpenContainerShape(U,skf8(Agent,skc4,V))* -> OpenContained(Place(skc4,Agent),U).
	Given clause: 157[0:Res:62.1,146.0] || UprightContainerShape(U,skf8(Agent,skc4,V))* -> OpenContained(Place(skc4,Agent),U).
	Given clause: 78[0:Inp] || Leq(U,V) Leq(V,W) -> Leq3(U,V,W)*.
	Given clause: 79[0:Inp] || UContained(U,V,W) -> UprightContainer(U,W,skf8(V,U,W))*.
	Given clause: 161[0:Res:79.1,135.0] || UContained(U,V,W) -> Region(skf8(V,U,W))*.
	Given clause: 142[0:Res:65.1,75.0] || OMuchSmaller(U,V) -> OMuchSmaller(U,W) MuchSmaller(skf5(W,U),V)*.
	Given clause: 155[2:Res:65.1,153.0] || equal(skf5(U,V),W)*+ -> OMuchSmaller(V,U) FeasiblePlace(V,W)*.
	Given clause: 82[0:Inp] || UContained(U,V,W)*+ -> P(Place(U,V),skf8(V,U,X))*.
	Given clause: 99[1:MRR:87.0,97.0] || P(Place(U,V),W)*+ UprightContainer(U,X,W)* -> UContained(U,V,X)*.
	Given clause: 168[1:Res:91.0,99.0] || UprightContainer(skc4,U,skf8(Agent,skc4,V))* -> UContained(skc4,Agent,U).
	Given clause: 148[2:SpR:124.1,73.1] || FeasiblePlace(U,V) UprightContainer(skf7(V,U),U,W)* -> UprightContainerShape(V,W).
	Given clause: 154[2:SpL:124.1,123.0] || FeasiblePlace(U,V) UprightContainerShape(V,W) -> UprightContainer(skf7(V,U),U,W)*.
	Given clause: 158[0:Res:73.1,157.0] || UprightContainer(U,V,skf8(Agent,skc4,W))*+ -> OpenContained(Place(skc4,Agent),Place(U,V))*.
	Given clause: 167[2:SpL:124.1,99.0] || FeasiblePlace(U,V) P(V,W) UprightContainer(skf7(V,U),X,W)*+ -> UContained(skf7(V,U),U,X)*.
	Given clause: 174[0:Res:92.0,158.0] ||  -> OpenContained(Place(skc4,Agent),Place(skc4,skc3))*.
	Given clause: 182[0:Res:174.0,66.0] || MuchSmaller(Place(skc4,skc3),Place(skc4,Agent))* -> .
	Given clause: 187[1:Spt:186.0,39.1] ||  -> FeasiblePlace(Agent,skf6(U))*.
	Given clause: 93[0:Res:2.0,49.0] ||  -> Time(skc4)*.
	Given clause: 1[0:Inp] ||  -> SmallObject(skc3)*.
	Given clause: 6[0:Inp] EmptyHanded(U) ||  -> Time(U)*.
	Given clause: 90[0:Res:1.0,3.0] ||  -> Object(skc3)*.
	Given clause: 95[0:Res:2.0,61.0] ||  -> Object(Agent)*.
	Given clause: 189[1:Res:187.0,12.0] ||  -> Region(skf6(U))*.
	Given clause: 113[0:Res:91.0,23.0] ||  -> Region(Place(skc4,Agent))*.
	Given clause: 5[0:Inp] AllStable(U) ||  -> Time(U)*.
	Given clause: 184[0:Res:174.0,28.0] ||  -> Region(Place(skc4,skc3))*.
	Given clause: 3[0:Inp] SmallObject(U) ||  -> Object(U)*.
	Given clause: 37[0:Inp] || Graspable(U,V)* -> Time(U).
	Given clause: 35[0:Inp] || CanGrasp(U,V)* -> Time(U).
	Given clause: 33[0:Inp] || NoPartialContents(U,V)* -> Time(U).
	Given clause: 21[0:Inp] || Reachable(U,V)* -> Time(U).
	Given clause: 17[0:Inp] || SafelyMovable(U,V)* -> Time(U).
	Given clause: 7[0:Inp] || Feasible(U,V)* -> Time(U).
	Given clause: 15[0:Inp] || OMuchSmaller(U,V)* -> Object(U).
	Given clause: 11[0:Inp] || FeasiblePlace(U,V)* -> Object(U).
	Given clause: 192[0:MRR:190.0,15.0] ||  -> Object(U)*.
	Given clause: 89[0:Res:1.0,72.0] || FeasiblePlace(Agent,U)* -> OMuchSmaller(skc3,U).
	Given clause: 198[1:Res:187.0,89.0] ||  -> OMuchSmaller(skc3,skf6(U))*.
	Given clause: 58[0:Inp] || OMuchSmaller(U,skf6(U))* -> SmallObject(U).
	Given clause: 52[0:Inp] || BoxedIn(U,V,W)* -> Time(U).
	Given clause: 43[0:Inp] || OSPlace(U,V,W)* -> Time(U).
	Given clause: 40[0:Inp] || Occurs(U,V,W)* -> Time(U).
	Given clause: 49[0:Inp] || UContained(U,V,W)* -> Time(U).
	Given clause: 59[0:Inp] || UprightContainer(U,V,W)* -> Time(U).
	Given clause: 41[0:Inp] || Occurs(U,V,W)* -> Time(V).
	Given clause: 46[0:Inp] || SkP0(U,V,W)* -> Time(W).
	Given clause: 205[0:Res:67.1,46.0] || OpenContainer(U,V,W)* -> Time(U).
	Given clause: 197[0:Res:65.1,89.0] ||  -> OMuchSmaller(Agent,U) OMuchSmaller(skc3,skf5(U,Agent))*.
	Given clause: 188[1:Res:187.0,75.0] || OMuchSmaller(Agent,U) -> MuchSmaller(skf6(V),U)*.
	Given clause: 194[0:MRR:76.1,192.0] Time(U) ||  -> Time(V)* FeasiblePlace(W,X)*.
	Given clause: 211[0:EmS:194.0,93.0] ||  -> Time(U)* FeasiblePlace(V,W)*.
	Given clause: 213[2:Spt:211.0] ||  -> Time(U)*.
	Given clause: 214[2:MRR:80.1,80.0,213.0] || Lt(U,V) -> Leq(U,V)*.
	Given clause: 215[2:MRR:81.1,81.0,213.0] || equal(U,V) -> Leq(U,V)*.
	Given clause: 181[0:Res:174.0,71.0] ||  -> P(Place(skc4,Agent),skf9(Place(skc4,Agent),U))*.
	Given clause: 212[0:MRR:195.0,211.0] || equal(Place(U,V),W)*+ -> FeasiblePlace(V,W)*.
	Given clause: 222[0:EqR:212.0] ||  -> FeasiblePlace(U,Place(V,U))*.
	Given clause: 224[0:Res:222.0,12.0] ||  -> Region(Place(U,V))*.
	Given clause: 225[0:Res:222.0,89.0] ||  -> OMuchSmaller(skc3,Place(U,Agent))*.
	Given clause: 221[0:Res:181.0,24.0] ||  -> Region(skf9(Place(skc4,Agent),U))*.
	Given clause: 72[0:Inp] SmallObject(U) || FeasiblePlace(Agent,V)*+ -> OMuchSmaller(U,V)*.
	Given clause: 229[1:Res:187.0,72.1] SmallObject(U) ||  -> OMuchSmaller(U,skf6(V))*.
	Given clause: 228[0:Res:222.0,72.1] SmallObject(U) ||  -> OMuchSmaller(U,Place(V,Agent))*.
	Given clause: 223[0:Res:222.0,75.0] || OMuchSmaller(U,V) -> MuchSmaller(Place(W,U),V)*.
SPASS V 3.7 
SPASS beiseite: Proof found.
Problem: lemmas/r.dfg 
SPASS derived 142 clauses, backtracked 49 clauses, performed 3 splits and kept 217 clauses.
SPASS allocated 52583 KBytes.
SPASS spent	0:00:00.06 on the problem.
		0:00:00.02 for the input.
		0:00:00.02 for the FLOTTER CNF translation.
		0:00:00.00 for inferences.
		0:00:00.00 for the backtracking.
		0:00:00.01 for the reduction.


Here is a proof with depth 7, length 36 :
1[0:Inp] ||  -> SmallObject(skc3)*.
2[0:Inp] ||  -> UContained(skc4,Agent,skc3)*.
11[0:Inp] || FeasiblePlace(U,V)* -> Object(U).
15[0:Inp] || OMuchSmaller(U,V)* -> Object(U).
49[0:Inp] || UContained(U,V,W)* -> Time(U).
62[0:Inp] || UprightContainerShape(U,V) -> OpenContainerShape(U,V)*.
65[0:Inp] ||  -> OMuchSmaller(U,V) FeasiblePlace(U,skf5(V,U))*.
66[0:Inp] || OpenContained(U,V)* MuchSmaller(V,U) -> .
72[0:Inp] SmallObject(U) || FeasiblePlace(Agent,V)*+ -> OMuchSmaller(U,V)*.
73[0:Inp] || UprightContainer(U,V,W) -> UprightContainerShape(Place(U,V),W)*.
75[0:Inp] || FeasiblePlace(U,V)*+ OMuchSmaller(U,W)* -> MuchSmaller(V,W)*.
76[0:Inp] Time(U) Object(V) ||  -> Time(W)* FeasiblePlace(V,X)*.
77[0:Inp] || P(U,V)*+ OpenContainerShape(W,V)* -> OpenContained(U,W)*.
79[0:Inp] || UContained(U,V,W) -> UprightContainer(U,W,skf8(V,U,W))*.
82[0:Inp] || UContained(U,V,W)*+ -> P(Place(U,V),skf8(V,U,X))*.
83[0:Inp] Time(U) Object(V) || equal(Place(W,V),X)* -> FeasiblePlace(V,X)*.
89[0:Res:1.0,72.0] || FeasiblePlace(Agent,U)* -> OMuchSmaller(skc3,U).
91[0:Res:2.0,82.0] ||  -> P(Place(skc4,Agent),skf8(Agent,skc4,U))*.
92[0:Res:2.0,79.0] ||  -> UprightContainer(skc4,skc3,skf8(Agent,skc4,skc3))*.
93[0:Res:2.0,49.0] ||  -> Time(skc4)*.
146[0:Res:91.0,77.0] || OpenContainerShape(U,skf8(Agent,skc4,V))* -> OpenContained(Place(skc4,Agent),U).
157[0:Res:62.1,146.0] || UprightContainerShape(U,skf8(Agent,skc4,V))* -> OpenContained(Place(skc4,Agent),U).
158[0:Res:73.1,157.0] || UprightContainer(U,V,skf8(Agent,skc4,W))*+ -> OpenContained(Place(skc4,Agent),Place(U,V))*.
174[0:Res:92.0,158.0] ||  -> OpenContained(Place(skc4,Agent),Place(skc4,skc3))*.
182[0:Res:174.0,66.0] || MuchSmaller(Place(skc4,skc3),Place(skc4,Agent))* -> .
190[0:Res:65.1,11.0] ||  -> OMuchSmaller(U,V)* Object(U).
192[0:MRR:190.0,15.0] ||  -> Object(U)*.
194[0:MRR:76.1,192.0] Time(U) ||  -> Time(V)* FeasiblePlace(W,X)*.
195[0:MRR:83.1,192.0] Time(U) || equal(Place(V,W),X)* -> FeasiblePlace(W,X)*.
211[0:EmS:194.0,93.0] ||  -> Time(U)* FeasiblePlace(V,W)*.
212[0:MRR:195.0,211.0] || equal(Place(U,V),W)*+ -> FeasiblePlace(V,W)*.
222[0:EqR:212.0] ||  -> FeasiblePlace(U,Place(V,U))*.
223[0:Res:222.0,75.0] || OMuchSmaller(U,V) -> MuchSmaller(Place(W,U),V)*.
225[0:Res:222.0,89.0] ||  -> OMuchSmaller(skc3,Place(U,Agent))*.
235[0:Res:223.1,182.0] || OMuchSmaller(skc3,Place(skc4,Agent))* -> .
236[0:MRR:235.0,225.0] ||  -> .
Formulae used in the proof : conjecture0 axiom4 axiom8 axiom6 SCA2 OFD2 Lem4Q OFD3 ORD3 OTD3 SCD6 OCD3

--------------------------SPASS-STOP------------------------------
