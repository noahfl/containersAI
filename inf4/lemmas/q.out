
--------------------------SPASS-START-----------------------------
Input Problem:
1[0:Inp] ||  -> MuchSmaller(skc3,skc2)*.
2[0:Inp] ||  -> OpenContained(skc2,skc3)*.
3[0:Inp] ||  -> MuchSmaller(U,V)*.
4[0:Inp] || MuchSmaller(U,U)* -> .
5[0:Inp] || SmallObject(U) -> Object(U)*.
6[0:Inp] || IntConn(U) -> Region(U)*.
7[0:Inp] || AllStable(U) -> Time(U)*.
8[0:Inp] || EmptyHanded(U) -> Time(U)*.
9[0:Inp] || Feasible(U,V)* -> Time(U).
10[0:Inp] || Feasible(U,V)* -> Action(V).
11[0:Inp] || Element(U,V)* -> Object(U).
12[0:Inp] || Element(U,V)* -> ObjectSet(V).
13[0:Inp] || FeasiblePlace(U,V)* -> Object(U).
14[0:Inp] || FeasiblePlace(U,V)* -> Region(V).
15[0:Inp] || Fits(U,V)* -> ObjectSet(U).
16[0:Inp] || Fits(U,V)* -> Region(V).
17[0:Inp] || OMuchSmaller(U,V)* -> Object(U).
18[0:Inp] || OMuchSmaller(U,V)* -> Region(V).
19[0:Inp] || SafelyMovable(U,V)* -> Time(U).
20[0:Inp] || SafelyMovable(U,V)* -> Object(V).
21[0:Inp] || FullyOutside(U,V)* -> Region(U).
22[0:Inp] || FullyOutside(U,V)* -> Region(V).
23[0:Inp] || Reachable(U,V)* -> Time(U).
24[0:Inp] || Reachable(U,V)* -> Region(V).
25[0:Inp] || P(U,V)* -> Region(U).
26[0:Inp] || P(U,V)* -> Region(V).
27[0:Inp] || SkP1(U,V)* -> Region(V).
28[0:Inp] || SkP1(U,V)* -> Region(U).
29[0:Inp] || OpenContained(U,V)* -> Region(U).
30[0:Inp] || OpenContained(U,V)* -> Region(V).
31[0:Inp] || SmallSet(U,V)* -> ObjectSet(U).
32[0:Inp] || SmallSet(U,V)* -> Region(V).
33[0:Inp] || MuchSmaller(U,V)* -> Region(U).
34[0:Inp] || MuchSmaller(U,V)* -> Region(V).
35[0:Inp] || NoPartialContents(U,V)* -> Time(U).
36[0:Inp] || NoPartialContents(U,V)* -> Object(V).
37[0:Inp] || CanGrasp(U,V)* -> Time(U).
38[0:Inp] || CanGrasp(U,V)* -> Object(V).
39[0:Inp] || Graspable(U,V)* -> Time(U).
40[0:Inp] || Graspable(U,V)* -> Object(V).
41[0:Inp] || Occurs(U,V,W)* -> Time(U).
42[0:Inp] || Occurs(U,V,W)* -> Time(V).
43[0:Inp] || Occurs(U,V,W)* -> Action(W).
44[0:Inp] || OSPlace(U,V,W)* -> Time(U).
45[0:Inp] || OSPlace(U,V,W)* -> ObjectSet(V).
46[0:Inp] || OSPlace(U,V,W)* -> Region(W).
47[0:Inp] || SkP0(U,V,W)* -> Time(W).
48[0:Inp] || SkP0(U,V,W)* -> Object(V).
49[0:Inp] || SkP0(U,V,W)* -> Region(U).
50[0:Inp] || UContained(U,V,W)* -> Time(U).
51[0:Inp] || UContained(U,V,W)* -> Object(V).
52[0:Inp] || UContained(U,V,W)* -> Object(W).
53[0:Inp] || BoxedIn(U,V,W)* -> Time(U).
54[0:Inp] || BoxedIn(U,V,W)* -> Object(V).
55[0:Inp] || BoxedIn(U,V,W)* -> Object(W).
56[0:Inp] || FullyOutside(U,V) -> SkP1(V,U)*.
57[0:Inp] || OpenContainerShape(U,V) -> SkP1(V,U)*.
58[0:Inp] || UprightContainerShape(U,V) -> SkP1(V,U)*.
59[0:Inp] || Leq3(U,V,W)* -> Leq(U,V).
60[0:Inp] || Leq3(U,V,W)* -> Leq(V,W).
61[0:Inp] || OpenContainerShape(U,V) -> P(V,ConvexHull(U))*.
62[0:Inp] || MuchSmaller(U,V) -> MuchSmaller(ConvexHull(U),V)*.
63[0:Inp] || OpenContainer(U,V,W) -> SkP0(W,V,U)*.
64[0:Inp] || UprightContainer(U,V,W) -> SkP0(W,V,U)*.
65[0:Inp] || OpenContained(U,V) -> OpenContainerShape(V,skf1(U,V))*.
66[0:Inp] || OpenContained(U,V)* -> P(U,skf1(U,W))*.
67[0:Inp] || Lt(U,V)* Lt(V,W)* -> Lt(U,W)*.
68[0:Inp] || OpenContainerShape(U,V)* P(W,V)* -> OpenContained(W,U)*.
69[0:Inp] || P(U,V)* P(V,W)* -> P(U,W)*.
70[0:Inp] || Leq(U,V) Leq(W,U) -> Leq3(W,U,V)*.
71[0:Inp] || Lt(U,V) Time(U) Time(V) -> Leq(U,V)*.
72[0:Inp] || equal(U,V) Time(U) Time(V) -> Leq(U,V)*.
73[0:Inp] || Leq(U,V)* Time(U) Time(V) -> Lt(U,V) equal(U,V).
 This is a first-order Non-Horn problem containing equality.
 This is a problem that contains sort information.
 All equations are many sorted.
 The conjecture is ground.
 Axiom clauses: 71 Conjecture clauses: 2
 Inferences: IEmS=1 ISoR=1 IEqR=1 IEqF=1 ISpR=1 ISpL=1 IORe=1 IOFc=1 
 Reductions: RFRew=1 RBRew=1 RFMRR=1 RBMRR=1 RObv=1 RUnC=1 RTaut=1 RSST=1 RSSi=1 RFSub=1 RBSub=1 RAED=1 RCon=1 
 Extras    : Input Saturation, Dynamic Selection, Full Splitting, Full Reduction,  Ratio: 5, FuncWeight: 1, VarWeight: 1
 Precedence: skf1 > skf0 > RUnion > MovingGroup > Contents > UContents > Union > Place > ConvexHull > TravelTo > Leq3 > Leq > Lt > Time > Object > Region > SkP0 > UprightContainer > SkP1 > FullyOutside > ObjectSet > SmallSet > AllStable > EmptyHanded > Graspable > Reachable > SafelyMovable > SmallObject > BoxedIn > NoPartialContents > Action > Occurs > CanGrasp > UprightContainerShape > UContained > OpenContainerShape > OpenContained > P > Element > IntConn > Feasible > Fits > OSPlace > MuchSmaller > OMuchSmaller > FeasiblePlace > OpenContainer > skc5 > skc4 > skc3 > skc2 > skc1 > skc0 > Rc > Rb > Ra > O > Null > Rd > R > T > Ta > Ra1 > Tm1 > Agent > Ox4 > Rc4 > Ob4 > Ta4
 Ordering  : KBO
Processed Problem:

Worked Off Clauses:

Usable Clauses:
2[0:Inp] ||  -> OpenContained(skc2,skc3)*.
3[0:Inp] ||  -> MuchSmaller(U,V)*.
5[0:Inp] SmallObject(U) ||  -> Object(U)*.
6[0:Inp] IntConn(U) ||  -> Region(U)*.
8[0:Inp] EmptyHanded(U) ||  -> Time(U)*.
7[0:Inp] AllStable(U) ||  -> Time(U)*.
10[0:Inp] || Feasible(U,V)* -> Action(V).
31[0:Inp] || SmallSet(U,V)* -> ObjectSet(U).
15[0:Inp] || Fits(U,V)* -> ObjectSet(U).
12[0:Inp] || Element(U,V)* -> ObjectSet(V).
40[0:Inp] || Graspable(U,V)* -> Object(V).
38[0:Inp] || CanGrasp(U,V)* -> Object(V).
36[0:Inp] || NoPartialContents(U,V)* -> Object(V).
20[0:Inp] || SafelyMovable(U,V)* -> Object(V).
17[0:Inp] || OMuchSmaller(U,V)* -> Object(U).
13[0:Inp] || FeasiblePlace(U,V)* -> Object(U).
11[0:Inp] || Element(U,V)* -> Object(U).
32[0:Inp] || SmallSet(U,V)* -> Region(V).
24[0:Inp] || Reachable(U,V)* -> Region(V).
18[0:Inp] || OMuchSmaller(U,V)* -> Region(V).
16[0:Inp] || Fits(U,V)* -> Region(V).
14[0:Inp] || FeasiblePlace(U,V)* -> Region(V).
22[0:Inp] || FullyOutside(U,V)* -> Region(V).
21[0:Inp] || FullyOutside(U,V)* -> Region(U).
34[0:Inp] || MuchSmaller(U,V)* -> Region(V).
33[0:Inp] || MuchSmaller(U,V)* -> Region(U).
28[0:Inp] || SkP1(U,V)* -> Region(U).
27[0:Inp] || SkP1(U,V)* -> Region(V).
30[0:Inp] || OpenContained(U,V)* -> Region(V).
29[0:Inp] || OpenContained(U,V)* -> Region(U).
26[0:Inp] || P(U,V)* -> Region(V).
25[0:Inp] || P(U,V)* -> Region(U).
39[0:Inp] || Graspable(U,V)* -> Time(U).
37[0:Inp] || CanGrasp(U,V)* -> Time(U).
35[0:Inp] || NoPartialContents(U,V)* -> Time(U).
23[0:Inp] || Reachable(U,V)* -> Time(U).
19[0:Inp] || SafelyMovable(U,V)* -> Time(U).
9[0:Inp] || Feasible(U,V)* -> Time(U).
58[0:Inp] || UprightContainerShape(U,V) -> SkP1(V,U)*.
56[0:Inp] || FullyOutside(U,V) -> SkP1(V,U)*.
57[0:Inp] || OpenContainerShape(U,V) -> SkP1(V,U)*.
43[0:Inp] || Occurs(U,V,W)* -> Action(W).
45[0:Inp] || OSPlace(U,V,W)* -> ObjectSet(V).
55[0:Inp] || BoxedIn(U,V,W)* -> Object(W).
54[0:Inp] || BoxedIn(U,V,W)* -> Object(V).
52[0:Inp] || UContained(U,V,W)* -> Object(W).
51[0:Inp] || UContained(U,V,W)* -> Object(V).
48[0:Inp] || SkP0(U,V,W)* -> Object(V).
46[0:Inp] || OSPlace(U,V,W)* -> Region(W).
49[0:Inp] || SkP0(U,V,W)* -> Region(U).
53[0:Inp] || BoxedIn(U,V,W)* -> Time(U).
50[0:Inp] || UContained(U,V,W)* -> Time(U).
44[0:Inp] || OSPlace(U,V,W)* -> Time(U).
42[0:Inp] || Occurs(U,V,W)* -> Time(V).
41[0:Inp] || Occurs(U,V,W)* -> Time(U).
47[0:Inp] || SkP0(U,V,W)* -> Time(W).
62[0:Inp] || MuchSmaller(U,V) -> MuchSmaller(ConvexHull(U),V)*.
61[0:Inp] || OpenContainerShape(U,V) -> P(V,ConvexHull(U))*.
60[0:Inp] || Leq3(U,V,W)* -> Leq(V,W).
59[0:Inp] || Leq3(U,V,W)* -> Leq(U,V).
65[0:Inp] || OpenContained(U,V) -> OpenContainerShape(V,skf1(U,V))*.
64[0:Inp] || UprightContainer(U,V,W) -> SkP0(W,V,U)*.
63[0:Inp] || OpenContainer(U,V,W) -> SkP0(W,V,U)*.
66[0:Inp] || OpenContained(U,V)* -> P(U,skf1(U,W))*.
67[0:Inp] || Lt(U,V)* Lt(W,U)* -> Lt(W,V)*.
68[0:Inp] || P(U,V)* OpenContainerShape(W,V)* -> OpenContained(U,W)*.
69[0:Inp] || P(U,V)* P(W,U)* -> P(W,V)*.
70[0:Inp] || Leq(U,V) Leq(V,W) -> Leq3(U,V,W)*.
71[0:Inp] Time(U) Time(V) || Lt(V,U) -> Leq(V,U)*.
72[0:Inp] Time(U) Time(V) || equal(V,U) -> Leq(V,U)*.
73[0:Inp] Time(U) Time(V) || Leq(V,U)* -> equal(V,U) Lt(V,U).
SPASS V 3.5 
SPASS beiseite: Proof found.
Problem: q.dfg 
SPASS derived 0 clauses, backtracked 0 clauses, performed 0 splits and kept 3 clauses.
SPASS allocated 55436 KBytes.
SPASS spent	0:00:00.05 on the problem.
		0:00:00.01 for the input.
		0:00:00.01 for the FLOTTER CNF translation.
		0:00:00.00 for inferences.
		0:00:00.00 for the backtracking.
		0:00:00.00 for the reduction.


Here is a proof with depth 0, length 3 :
3[0:Inp] ||  -> MuchSmaller(U,V)*.
4[0:Inp] || MuchSmaller(U,U)* -> .
74[0:MRR:4.0,3.0] ||  -> .
Formulae used in the proof : axiom32 axiom31

--------------------------SPASS-STOP------------------------------
