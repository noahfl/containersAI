
--------------------------SPASS-START-----------------------------
Input Problem:
1[0:Inp] ||  -> Fixed(Ob3)*.
2[0:Inp] ||  -> Lt(Ta3,Tb3)*.
3[0:Inp] || equal(Ob3,Os3)** -> .
4[0:Inp] ||  -> Time(skf5(U,V))*.
5[0:Inp] || RigidObject(U) -> Object(U)*.
6[0:Inp] || RigidHistory(U) -> History(U)*.
7[0:Inp] ||  -> P(Place(Ta3,Os3),RInside)*.
8[0:Inp] ||  -> P(Place(Tb3,Os3),RGreen)*.
9[0:Inp] || Lt(U,V)* -> Time(U).
10[0:Inp] || Lt(U,V)* -> Time(V).
11[0:Inp] || Leq(U,V)* -> Time(U).
12[0:Inp] || Leq(U,V)* -> Time(V).
13[0:Inp] || Ordered(U,V)* -> Time(U).
14[0:Inp] || Ordered(U,V)* -> Time(V).
15[0:Inp] || SkP0(U,V)* -> Region(V).
16[0:Inp] || SkP0(U,V)* -> Region(U).
17[0:Inp] || SkP1(U,V)* -> Region(V).
18[0:Inp] || SkP1(U,V)* -> Region(U).
19[0:Inp] || Stable(U,V)* -> Time(U).
20[0:Inp] || Stable(U,V)* -> Object(V).
21[0:Inp] || Object(U) -> ObjectSet(Singleton(U))*.
22[0:Inp] || FeasiblePlace(U,V)* -> Object(U).
23[0:Inp] || FeasiblePlace(U,V)* -> Region(V).
24[0:Inp] || Object(U) -> History(HPlace(U))*.
25[0:Inp] ||  -> CombinedContainer(Place(Ta3,Ob3),RRed,RInside)*.
26[0:Inp] ||  -> History(U) Constant(V,W,U)*.
27[0:Inp] || FeasiblePlace(U,V)* -> IntConn(V).
28[0:Inp] || DR(U,V)* -> Region(U).
29[0:Inp] || DR(U,V)* -> Region(V).
30[0:Inp] || Leq3(U,V,W)* -> Time(U).
31[0:Inp] || Leq3(U,V,W)* -> Time(V).
32[0:Inp] || Leq3(U,V,W)* -> Time(W).
33[0:Inp] || P(U,V) -> SkP0(V,U)*.
34[0:Inp] || O(U,V) -> SkP0(V,U)*.
35[0:Inp] || EC(U,V) -> SkP0(V,U)*.
36[0:Inp] || DR(U,V) -> SkP0(V,U)*.
37[0:Inp] || CombinedContainer(U,V,W)* -> Region(U).
38[0:Inp] || CombinedContainer(U,V,W)* -> Region(V).
39[0:Inp] || CombinedContainer(U,V,W)* -> Region(W).
40[0:Inp] || Contained(U,V) -> SkP1(V,U)*.
41[0:Inp] || Cavity(U,V) -> SkP1(V,U)*.
42[0:Inp] || Outside(U,V) -> SkP1(V,U)*.
43[0:Inp] || Motionless(U,V,W)* -> Time(U).
44[0:Inp] || Motionless(U,V,W)* -> Time(V).
45[0:Inp] || Motionless(U,V,W)* -> Object(W).
46[0:Inp] || OSPlace(U,V,W)* -> Time(U).
47[0:Inp] || OSPlace(U,V,W)* -> ObjectSet(V).
48[0:Inp] || OSPlace(U,V,W)* -> Region(W).
49[0:Inp] || ClosedContainer(U,V,W)* -> Time(U).
50[0:Inp] || ClosedContainer(U,V,W)* -> ObjectSet(V).
51[0:Inp] || ClosedContainer(U,V,W)* -> Region(W).
52[0:Inp] || CContained(U,V,W)* -> Time(U).
53[0:Inp] || CContained(U,V,W)* -> Object(V).
54[0:Inp] || CContained(U,V,W)* -> ObjectSet(W).
55[0:Inp] || SkP3(U,V,W)* -> Time(W).
56[0:Inp] || SkP3(U,V,W)* -> Time(V).
57[0:Inp] || SkP3(U,V,W)* -> History(U).
58[0:Inp] ||  -> Outside(RGreen,RUnion(Place(Ta3,Ob3),RRed))*.
59[0:Inp] ||  -> Lt(U,V) Constant(U,V,W)*.
60[0:Inp] || Constant(U,V,W)* -> History(W).
61[0:Inp] ||  -> Lt(U,skf4(V,W,X,U))*.
62[0:Inp] || AlwaysIntConn(U,V,W)* -> History(W).
63[0:Inp] ||  -> P(Slice(Tb3,HPlace(Os3)),Slice(Tb3,U))*.
64[0:Inp] || SkP2(U,V,W,X)* -> Time(X).
65[0:Inp] || SkP2(U,V,W,X)* -> Time(W).
66[0:Inp] || SkP2(U,V,W,X)* -> History(V).
67[0:Inp] || SkP2(U,V,W,X)* -> History(U).
68[0:Inp] || CombinedContainer(U,V,W)* -> EC(U,V).
69[0:Inp] ||  -> equal(Slice(U,HPlace(V)),Place(U,V))**.
70[0:Inp] ||  -> Leq3(U,V,W)* Constant(U,W,X)*.
71[0:Inp] || Constant(U,V,W)* -> Lt(U,V).
72[0:Inp] || AlwaysIntConn(U,V,W)* -> Lt(U,V).
73[0:Inp] || Motionless(U,V,W)* -> Lt(U,V).
74[0:Inp] || O(U,V) DR(U,V)* -> .
75[0:Inp] || Constant(U,V,W) -> SkP3(W,V,U)*.
76[0:Inp] || Continuous(U,V,W) -> SkP3(W,V,U)*.
77[0:Inp] || AlwaysIntConn(U,V,W) -> SkP3(W,V,U)*.
78[0:Inp] || Cavity(U,V) CombinedContainer(V,W,U)* -> .
79[0:Inp] || Cavity(U,V) CombinedContainer(W,V,U)* -> .
80[0:Inp] || O(U,RUnion(V,W))* -> O(U,V).
81[0:Inp] || O(U,RUnion(V,W))* -> O(U,W).
82[0:Inp] || Region(U) Region(V) -> Region(RUnion(U,V))*.
83[0:Inp] || Time(U) Object(V) -> Region(Place(U,V))*.
84[0:Inp] || Time(U) History(V) -> Region(Slice(U,V))*.
85[0:Inp] || CombinedContainer(U,V,W) -> Cavity(W,RUnion(U,V))*.
86[0:Inp] || PersistentCavity(U,V,W,X) -> SkP2(X,W,V,U)*.
87[0:Inp] || NoEntranceCavity(U,V,W,X) -> SkP2(X,W,V,U)*.
88[0:Inp] || NoExitCavity(U,V,W,X) -> SkP2(X,W,V,U)*.
89[0:Inp] || PersistentCavity(U,V,W,X) -> NoExitCavity(U,V,W,X)*.
90[0:Inp] || PersistentCavity(U,V,W,X) -> NoEntranceCavity(U,V,W,X)*.
91[0:Inp] || Object(U) Lt(V,W) -> Continuous(V,W,HPlace(U))*.
92[0:Inp] || equal(Slice(U,V),Slice(W,V))* -> Constant(W,X,V)*.
93[0:Inp] || Object(U) Lt(V,W) -> AlwaysIntConn(V,W,HPlace(U))*.
94[0:Inp] || Lt(U,V) -> Leq3(U,W,V)* Motionless(U,V,X)*.
95[0:Inp] || Region(U) Region(V) -> O(V,U) DR(V,U)*.
96[0:Inp] || Fixed(U) Lt(V,W)* Time(X) -> Stable(X,U)*.
97[0:Inp] || Region(U) Lt(V,W) -> Constant(V,W,skf3(U,V,W))*.
98[0:Inp] || Fixed(U) Lt(V,W) Time(X)* -> Motionless(V,W,U)*.
99[0:Inp] || Leq3(U,V,W)* AlwaysIntConn(U,W,X)* -> IntConn(Slice(V,X))*.
100[0:Inp] || Region(U) Lt(V,W)* -> equal(Slice(V,skf3(U,V,X)),U)**.
101[0:Inp] || Lt(U,V) History(W) -> Leq3(U,X,V)* Constant(U,V,W)*.
102[0:Inp] || Lt(U,V) History(W) -> Leq3(U,X,V)* AlwaysIntConn(U,V,W)*.
103[0:Inp] || Outside(U,V)* P(W,U)* Cavity(X,V)* P(W,X)* -> .
104[0:Inp] || IntConn(Slice(U,V))* Lt(W,X) History(V) -> AlwaysIntConn(W,X,V)*.
105[0:Inp] || equal(Place(U,V),Place(W,V))* Lt(W,X) -> Motionless(W,X,V)*.
106[0:Inp] || NoExitCavity(U,V,W,X) NoEntranceCavity(U,V,W,X)* -> PersistentCavity(U,V,W,X).
107[0:Inp] || Leq3(U,V,W)* Constant(U,W,X)* -> equal(Slice(V,X),Slice(U,X))*.
108[0:Inp] || FeasiblePlace(U,V) Object(U) Region(V) -> equal(Place(skf5(V,U),U),V)**.
109[0:Inp] || Leq3(U,V,W)* Motionless(U,W,X)* -> equal(Place(V,X),Place(U,X))*.
110[0:Inp] || Time(U) equal(Place(U,V),W)* Object(V) Region(W) -> FeasiblePlace(V,W)*.
111[0:Inp] || equal(Slice(U,V),Slice(W,V))* Lt(W,X) History(V) -> Constant(W,X,V)*.
112[0:Inp] || Cavity(U,RUnion(V,W))* EC(V,W) -> Cavity(U,V) Cavity(U,W) CombinedContainer(V,W,U).
113[0:Inp] || Constant(U,V,W) Constant(U,V,X) Cavity(Slice(U,W),Slice(U,X))* -> PersistentCavity(U,V,W,X)*.
114[0:Inp] || Leq3(U,V,W)* History(X) Constant(U,W,X)* Lt(U,W) -> equal(Slice(V,X),Slice(U,X))*.
115[0:Inp] || NoExitCavity(U,V,W,X)* P(Slice(U,Y),Slice(U,W))* AlwaysIntConn(U,V,Y) Continuous(U,V,Y) -> Lt(skf4(X,Y,V,U),V)* P(Slice(V,Y),Slice(V,W))*.
116[0:Inp] || NoExitCavity(U,V,W,X)* P(Slice(U,Y),Slice(U,W))* AlwaysIntConn(U,V,Y) Continuous(U,V,Y) -> O(Slice(skf4(X,Y,V,U),Y),Slice(skf4(X,Y,V,U),X))* P(Slice(V,Y),Slice(V,W))*.
 This is a first-order Non-Horn problem containing equality.
 This is a problem that has, if any, a non-trivial domain model.
 This is a problem that contains sort information.
 The following monadic predicates have finite extensions: Fixed.
 Axiom clauses: 115 Conjecture clauses: 1
 Inferences: IEmS=1 ISoR=1 IEqR=1 IEqF=1 ISpR=1 ISpL=1 IORe=1 IOFc=1 
 Reductions: RFRew=1 RBRew=1 RFMRR=1 RBMRR=1 RObv=1 RUnC=1 RTaut=1 RSSi=1 RFSub=1 RBSub=1 RAED=2 RCon=1 
 Extras    : Input Saturation, Dynamic Selection, Full Splitting, Full Reduction,  Ratio: 5, FuncWeight: 1, VarWeight: 1
 Precedence: skf4 > skf1 > skf3 > skf0 > skf5 > skf2 > RUnion > Place > Slice > HPlace > Singleton > ObjectSet > SkP3 > SkP2 > SkP0 > FeasiblePlace > Constant > Time > Stable > Motionless > IntConn > AlwaysIntConn > Leq3 > DR > O > Continuous > NoEntranceCavity > NoExitCavity > PersistentCavity > Lt > P > Region > Object > History > OSPlace > Fixed > Ordered > SkP1 > EC > Cavity > CombinedContainer > Outside > Contained > Leq > ClosedContainer > CContained > RigidObject > RigidHistory > skc4 > skc3 > skc2 > skc1 > skc0 > Tb3 > Ta3 > RInside > RGreen > RRed > Ob3 > Os3
 Ordering  : KBO
Processed Problem:

Worked Off Clauses:

Usable Clauses:
1[0:Inp] ||  -> Fixed(Ob3)*.
117[0:MRR:60.0,26.1] ||  -> History(U)*.
119[0:MRR:10.0,118.0] ||  -> Time(U)*.
118[0:MRR:71.0,59.1] ||  -> Lt(U,V)*.
3[0:Inp] || equal(Ob3,Os3)** -> .
122[0:MRR:84.0,84.1,119.0,117.0] ||  -> Region(Slice(U,V))*.
8[0:Inp] ||  -> P(Place(Tb3,Os3),RGreen)*.
7[0:Inp] ||  -> P(Place(Ta3,Os3),RInside)*.
5[0:Inp] RigidObject(U) ||  -> Object(U)*.
25[0:Inp] ||  -> CombinedContainer(Place(Ta3,Ob3),RRed,RInside)*.
21[0:Inp] Object(U) ||  -> ObjectSet(Singleton(U))*.
127[0:MRR:96.1,96.2,119.0,118.0] Fixed(U) ||  -> Stable(V,U)*.
27[0:Inp] || FeasiblePlace(U,V)* -> IntConn(V).
20[0:Inp] || Stable(U,V)* -> Object(V).
22[0:Inp] || FeasiblePlace(U,V)* -> Object(U).
29[0:Inp] || DR(U,V)* -> Region(V).
28[0:Inp] || DR(U,V)* -> Region(U).
23[0:Inp] || FeasiblePlace(U,V)* -> Region(V).
18[0:Inp] || SkP1(U,V)* -> Region(U).
17[0:Inp] || SkP1(U,V)* -> Region(V).
16[0:Inp] || SkP0(U,V)* -> Region(U).
15[0:Inp] || SkP0(U,V)* -> Region(V).
58[0:Inp] ||  -> Outside(RGreen,RUnion(Place(Ta3,Ob3),RRed))*.
121[0:Rew:69.0,63.0] ||  -> P(Place(Tb3,Os3),Slice(Tb3,U))*.
123[0:MRR:83.0,119.0] Object(U) ||  -> Region(Place(V,U))*.
40[0:Inp] || Contained(U,V) -> SkP1(V,U)*.
42[0:Inp] || Outside(U,V) -> SkP1(V,U)*.
41[0:Inp] || Cavity(U,V) -> SkP1(V,U)*.
35[0:Inp] || EC(U,V) -> SkP0(V,U)*.
36[0:Inp] || DR(U,V) -> SkP0(V,U)*.
34[0:Inp] || O(U,V) -> SkP0(V,U)*.
33[0:Inp] || P(U,V) -> SkP0(V,U)*.
128[0:MRR:98.1,98.2,119.0,118.0] Fixed(U) ||  -> Motionless(V,W,U)*.
54[0:Inp] || CContained(U,V,W)* -> ObjectSet(W).
50[0:Inp] || ClosedContainer(U,V,W)* -> ObjectSet(V).
47[0:Inp] || OSPlace(U,V,W)* -> ObjectSet(V).
53[0:Inp] || CContained(U,V,W)* -> Object(V).
45[0:Inp] || Motionless(U,V,W)* -> Object(W).
51[0:Inp] || ClosedContainer(U,V,W)* -> Region(W).
48[0:Inp] || OSPlace(U,V,W)* -> Region(W).
39[0:Inp] || CombinedContainer(U,V,W)* -> Region(W).
38[0:Inp] || CombinedContainer(U,V,W)* -> Region(V).
37[0:Inp] || CombinedContainer(U,V,W)* -> Region(U).
136[0:Res:121.0,33.0] ||  -> SkP0(Slice(Tb3,U),Place(Tb3,Os3))*.
69[0:Inp] ||  -> equal(Slice(U,HPlace(V)),Place(U,V))**.
74[0:Inp] || DR(U,V)* O(U,V) -> .
126[0:MRR:91.1,118.0] Object(U) ||  -> Continuous(V,W,HPlace(U))*.
125[0:MRR:93.1,118.0] Object(U) ||  -> AlwaysIntConn(V,W,HPlace(U))*.
68[0:Inp] || CombinedContainer(U,V,W)* -> EC(U,V).
124[0:MRR:94.0,118.0] ||  -> Motionless(U,V,W)* Leq3(U,X,V)*.
130[0:MRR:102.0,102.1,117.0,118.0] ||  -> AlwaysIntConn(U,V,W)* Leq3(U,X,V)*.
70[0:Inp] ||  -> Constant(U,V,W)* Leq3(U,X,V)*.
76[0:Inp] || Continuous(U,V,W) -> SkP3(W,V,U)*.
77[0:Inp] || AlwaysIntConn(U,V,W) -> SkP3(W,V,U)*.
75[0:Inp] || Constant(U,V,W) -> SkP3(W,V,U)*.
81[0:Inp] || O(U,RUnion(V,W))* -> O(U,W).
80[0:Inp] || O(U,RUnion(V,W))* -> O(U,V).
79[0:Inp] || Cavity(U,V) CombinedContainer(W,V,U)* -> .
78[0:Inp] || Cavity(U,V) CombinedContainer(V,W,U)* -> .
133[0:MRR:104.0,104.1,117.0,118.0] || IntConn(Slice(U,V))* -> AlwaysIntConn(W,X,V)*.
82[0:Inp] Region(U) Region(V) ||  -> Region(RUnion(V,U))*.
129[0:MRR:97.1,118.0] Region(U) ||  -> Constant(V,W,skf3(U,V,W))*.
85[0:Inp] || CombinedContainer(U,V,W) -> Cavity(W,RUnion(U,V))*.
134[0:MRR:108.0,108.1,22.1,23.1] || FeasiblePlace(U,V) -> equal(Place(skf5(V,U),U),V)**.
131[0:MRR:100.1,118.0] Region(U) ||  -> equal(Slice(V,skf3(U,V,W)),U)**.
87[0:Inp] || NoEntranceCavity(U,V,W,X) -> SkP2(X,W,V,U)*.
88[0:Inp] || NoExitCavity(U,V,W,X) -> SkP2(X,W,V,U)*.
90[0:Inp] || PersistentCavity(U,V,W,X) -> NoEntranceCavity(U,V,W,X)*.
86[0:Inp] || PersistentCavity(U,V,W,X) -> SkP2(X,W,V,U)*.
89[0:Inp] || PersistentCavity(U,V,W,X) -> NoExitCavity(U,V,W,X)*.
95[0:Inp] Region(U) Region(V) ||  -> DR(U,V)* O(U,V).
132[0:MRR:105.1,118.0] || equal(Place(U,V),Place(W,V))* -> Motionless(W,X,V)*.
92[0:Inp] || equal(Slice(U,V),Slice(W,V))* -> Constant(W,X,V)*.
99[0:Inp] || AlwaysIntConn(U,V,W)* Leq3(U,X,V)* -> IntConn(Slice(X,W))*.
135[0:MRR:110.0,119.0] Region(U) Object(V) || equal(Place(W,V),U)* -> FeasiblePlace(V,U)*.
103[0:Inp] || P(U,V)* Cavity(V,W)* P(U,X)* Outside(X,W)* -> .
137[0:Res:121.0,103.1] || Cavity(U,V)* Outside(Slice(Tb3,W),V)* P(Place(Tb3,Os3),U)* -> .
138[0:Res:121.0,103.3] || Outside(U,V)* Cavity(Slice(Tb3,W),V)* P(Place(Tb3,Os3),U)* -> .
106[0:Inp] || NoEntranceCavity(U,V,W,X)* NoExitCavity(U,V,W,X) -> PersistentCavity(U,V,W,X).
109[0:Inp] || Motionless(U,V,W)* Leq3(U,X,V)* -> equal(Place(X,W),Place(U,W))*.
107[0:Inp] || Constant(U,V,W)* Leq3(U,X,V)* -> equal(Slice(X,W),Slice(U,W))*.
112[0:Inp] || EC(U,V) Cavity(W,RUnion(U,V))* -> Cavity(W,V) Cavity(W,U) CombinedContainer(U,V,W).
113[0:Inp] || Cavity(Slice(U,V),Slice(U,W))* Constant(U,X,W) Constant(U,X,V) -> PersistentCavity(U,X,V,W)*.
116[0:Inp] || P(Slice(U,V),Slice(U,W))* Continuous(U,X,V) AlwaysIntConn(U,X,V) NoExitCavity(U,X,W,Y)* -> P(Slice(X,V),Slice(X,W))* O(Slice(skf4(Y,V,X,U),V),Slice(skf4(Y,V,X,U),Y))*.
	Given clause: 1[0:Inp] ||  -> Fixed(Ob3)*.
	Given clause: 117[0:MRR:60.0,26.1] ||  -> History(U)*.
	Given clause: 119[0:MRR:10.0,118.0] ||  -> Time(U)*.
	Given clause: 118[0:MRR:71.0,59.1] ||  -> Lt(U,V)*.
	Given clause: 3[0:Inp] || equal(Ob3,Os3)** -> .
	Given clause: 122[0:MRR:84.0,84.1,119.0,117.0] ||  -> Region(Slice(U,V))*.
	Given clause: 8[0:Inp] ||  -> P(Place(Tb3,Os3),RGreen)*.
	Given clause: 7[0:Inp] ||  -> P(Place(Ta3,Os3),RInside)*.
	Given clause: 5[0:Inp] RigidObject(U) ||  -> Object(U)*.
	Given clause: 25[0:Inp] ||  -> CombinedContainer(Place(Ta3,Ob3),RRed,RInside)*.
	Given clause: 21[0:Inp] Object(U) ||  -> ObjectSet(Singleton(U))*.
	Given clause: 127[0:MRR:96.1,96.2,119.0,118.0] Fixed(U) ||  -> Stable(V,U)*.
	Given clause: 27[0:Inp] || FeasiblePlace(U,V)* -> IntConn(V).
	Given clause: 20[0:Inp] || Stable(U,V)* -> Object(V).
	Given clause: 22[0:Inp] || FeasiblePlace(U,V)* -> Object(U).
	Given clause: 139[0:Res:127.1,20.0] Fixed(U) ||  -> Object(U)*.
	Given clause: 29[0:Inp] || DR(U,V)* -> Region(V).
	Given clause: 28[0:Inp] || DR(U,V)* -> Region(U).
	Given clause: 23[0:Inp] || FeasiblePlace(U,V)* -> Region(V).
	Given clause: 18[0:Inp] || SkP1(U,V)* -> Region(U).
	Given clause: 17[0:Inp] || SkP1(U,V)* -> Region(V).
	Given clause: 16[0:Inp] || SkP0(U,V)* -> Region(U).
	Given clause: 15[0:Inp] || SkP0(U,V)* -> Region(V).
	Given clause: 58[0:Inp] ||  -> Outside(RGreen,RUnion(Place(Ta3,Ob3),RRed))*.
	Given clause: 121[0:Rew:69.0,63.0] ||  -> P(Place(Tb3,Os3),Slice(Tb3,U))*.
	Given clause: 136[0:Res:121.0,33.0] ||  -> SkP0(Slice(Tb3,U),Place(Tb3,Os3))*.
	Given clause: 140[0:Res:136.0,15.0] ||  -> Region(Place(Tb3,Os3))*.
	Given clause: 123[0:MRR:83.0,119.0] Object(U) ||  -> Region(Place(V,U))*.
	Given clause: 40[0:Inp] || Contained(U,V) -> SkP1(V,U)*.
	Given clause: 42[0:Inp] || Outside(U,V) -> SkP1(V,U)*.
	Given clause: 142[0:Res:40.1,17.0] || Contained(U,V)* -> Region(U).
	Given clause: 143[0:Res:40.1,18.0] || Contained(U,V)* -> Region(V).
	Given clause: 144[0:Res:42.1,17.0] || Outside(U,V)* -> Region(U).
	Given clause: 146[0:Res:58.0,144.0] ||  -> Region(RGreen)*.
	Given clause: 41[0:Inp] || Cavity(U,V) -> SkP1(V,U)*.
	Given clause: 145[0:Res:42.1,18.0] || Outside(U,V)* -> Region(V).
	Given clause: 149[0:Res:58.0,145.0] ||  -> Region(RUnion(Place(Ta3,Ob3),RRed))*.
	Given clause: 147[0:Res:41.1,17.0] || Cavity(U,V)* -> Region(U).
	Given clause: 148[0:Res:41.1,18.0] || Cavity(U,V)* -> Region(V).
	Given clause: 35[0:Inp] || EC(U,V) -> SkP0(V,U)*.
	Given clause: 150[0:Res:35.1,15.0] || EC(U,V)* -> Region(U).
	Given clause: 151[0:Res:35.1,16.0] || EC(U,V)* -> Region(V).
	Given clause: 36[0:Inp] || DR(U,V) -> SkP0(V,U)*.
	Given clause: 34[0:Inp] || O(U,V) -> SkP0(V,U)*.
	Given clause: 33[0:Inp] || P(U,V) -> SkP0(V,U)*.
	Given clause: 154[0:Res:34.1,15.0] || O(U,V)* -> Region(U).
	Given clause: 155[0:Res:34.1,16.0] || O(U,V)* -> Region(V).
	Given clause: 156[0:Res:33.1,15.0] || P(U,V)* -> Region(U).
	Given clause: 160[0:Res:7.0,156.0] ||  -> Region(Place(Ta3,Os3))*.
	Given clause: 128[0:MRR:98.1,98.2,119.0,118.0] Fixed(U) ||  -> Motionless(V,W,U)*.
	Given clause: 157[0:Res:33.1,16.0] || P(U,V)* -> Region(V).
	Given clause: 163[0:Res:7.0,157.0] ||  -> Region(RInside)*.
	Given clause: 54[0:Inp] || CContained(U,V,W)* -> ObjectSet(W).
	Given clause: 50[0:Inp] || ClosedContainer(U,V,W)* -> ObjectSet(V).
	Given clause: 47[0:Inp] || OSPlace(U,V,W)* -> ObjectSet(V).
	Given clause: 53[0:Inp] || CContained(U,V,W)* -> Object(V).
	Given clause: 45[0:Inp] || Motionless(U,V,W)* -> Object(W).
	Given clause: 51[0:Inp] || ClosedContainer(U,V,W)* -> Region(W).
	Given clause: 48[0:Inp] || OSPlace(U,V,W)* -> Region(W).
	Given clause: 39[0:Inp] || CombinedContainer(U,V,W)* -> Region(W).
	Given clause: 38[0:Inp] || CombinedContainer(U,V,W)* -> Region(V).
	Given clause: 166[0:Res:25.0,38.0] ||  -> Region(RRed)*.
	Given clause: 37[0:Inp] || CombinedContainer(U,V,W)* -> Region(U).
	Given clause: 167[0:Res:25.0,37.0] ||  -> Region(Place(Ta3,Ob3))*.
	Given clause: 69[0:Inp] ||  -> equal(Slice(U,HPlace(V)),Place(U,V))**.
	Given clause: 168[0:SpR:69.0,122.0] ||  -> Region(Place(U,V))*.
	Given clause: 170[0:SpR:69.0,121.0] ||  -> P(Place(Tb3,Os3),Place(Tb3,U))*.
	Given clause: 171[0:SpR:69.0,136.0] ||  -> SkP0(Place(Tb3,U),Place(Tb3,Os3))*.
	Given clause: 74[0:Inp] || DR(U,V)* O(U,V) -> .
	Given clause: 126[0:MRR:91.1,118.0] Object(U) ||  -> Continuous(V,W,HPlace(U))*.
	Given clause: 125[0:MRR:93.1,118.0] Object(U) ||  -> AlwaysIntConn(V,W,HPlace(U))*.
	Given clause: 68[0:Inp] || CombinedContainer(U,V,W)* -> EC(U,V).
	Given clause: 176[0:Res:25.0,68.0] ||  -> EC(Place(Ta3,Ob3),RRed)*.
	Given clause: 124[0:MRR:94.0,118.0] ||  -> Motionless(U,V,W)* Leq3(U,X,V)*.
	Given clause: 130[0:MRR:102.0,102.1,117.0,118.0] ||  -> AlwaysIntConn(U,V,W)* Leq3(U,X,V)*.
	Given clause: 179[0:Res:124.0,45.0] ||  -> Leq3(U,V,W)* Object(X)*.
	Given clause: 180[1:Spt:179.1] ||  -> Object(U)*.
	Given clause: 181[1:MRR:21.0,180.0] ||  -> ObjectSet(Singleton(U))*.
	Given clause: 182[1:MRR:126.0,180.0] ||  -> Continuous(U,V,HPlace(W))*.
	Given clause: 183[1:MRR:125.0,180.0] ||  -> AlwaysIntConn(U,V,HPlace(W))*.
	Given clause: 70[0:Inp] ||  -> Constant(U,V,W)* Leq3(U,X,V)*.
	Given clause: 81[0:Inp] || O(U,RUnion(V,W))* -> O(U,W).
	Given clause: 80[0:Inp] || O(U,RUnion(V,W))* -> O(U,V).
	Given clause: 79[0:Inp] || Cavity(U,V) CombinedContainer(W,V,U)* -> .
	Given clause: 185[0:Res:25.0,79.1] || Cavity(RInside,RRed)* -> .
	Given clause: 78[0:Inp] || Cavity(U,V) CombinedContainer(V,W,U)* -> .
	Given clause: 186[0:Res:25.0,78.1] || Cavity(RInside,Place(Ta3,Ob3))* -> .
	Given clause: 133[0:MRR:104.0,104.1,117.0,118.0] || IntConn(Slice(U,V))*+ -> AlwaysIntConn(W,X,V)*.
	Given clause: 76[0:Inp] || Continuous(U,V,W) -> SkP3(W,V,U)*.
	Given clause: 77[0:Inp] || AlwaysIntConn(U,V,W) -> SkP3(W,V,U)*.
	Given clause: 75[0:Inp] || Constant(U,V,W) -> SkP3(W,V,U)*.
	Given clause: 82[0:Inp] Region(U) Region(V) ||  -> Region(RUnion(V,U))*.
	Given clause: 129[0:MRR:97.1,118.0] Region(U) ||  -> Constant(V,W,skf3(U,V,W))*.
	Given clause: 85[0:Inp] || CombinedContainer(U,V,W) -> Cavity(W,RUnion(U,V))*.
	Given clause: 188[0:Res:85.1,148.0] || CombinedContainer(U,V,W)*+ -> Region(RUnion(U,V))*.
	Given clause: 134[0:MRR:108.0,108.1,22.1,23.1] || FeasiblePlace(U,V) -> equal(Place(skf5(V,U),U),V)**.
	Given clause: 131[0:MRR:100.1,118.0] Region(U) ||  -> equal(Slice(V,skf3(U,V,W)),U)**.
	Given clause: 194[0:SpR:131.1,121.0] Region(U) ||  -> P(Place(Tb3,Os3),U)*.
	Given clause: 195[0:SpR:131.1,136.0] Region(U) ||  -> SkP0(U,Place(Tb3,Os3))*.
	Given clause: 87[0:Inp] || NoEntranceCavity(U,V,W,X) -> SkP2(X,W,V,U)*.
	Given clause: 88[0:Inp] || NoExitCavity(U,V,W,X) -> SkP2(X,W,V,U)*.
	Given clause: 90[0:Inp] || PersistentCavity(U,V,W,X) -> NoEntranceCavity(U,V,W,X)*.
	Given clause: 86[0:Inp] || PersistentCavity(U,V,W,X) -> SkP2(X,W,V,U)*.
	Given clause: 89[0:Inp] || PersistentCavity(U,V,W,X) -> NoExitCavity(U,V,W,X)*.
	Given clause: 95[0:Inp] Region(U) Region(V) ||  -> DR(U,V)* O(U,V).
	Given clause: 184[1:MRR:135.1,180.0] Region(U) || equal(Place(V,W),U)*+ -> FeasiblePlace(W,U)*.
	Given clause: 207[1:SSi:205.0,168.0] ||  -> FeasiblePlace(U,Place(V,U))*.
	Given clause: 210[1:Res:207.0,27.0] ||  -> IntConn(Place(U,V))*.
	Given clause: 132[0:MRR:105.1,118.0] || equal(Place(U,V),Place(W,V))*+ -> Motionless(W,X,V)*.
	Given clause: 212[0:EqR:132.0] ||  -> Motionless(U,V,W)*.
	Given clause: 92[0:Inp] || equal(Slice(U,V),Slice(W,V))*+ -> Constant(W,X,V)*.
	Given clause: 216[0:EqR:92.0] ||  -> Constant(U,V,W)*.
	Given clause: 221[0:MRR:75.0,216.0] ||  -> SkP3(U,V,W)*.
	Given clause: 215[0:MRR:109.0,212.0] || Leq3(U,V,W)*+ -> equal(Place(V,X),Place(U,X))*.
	Given clause: 224[0:Res:130.1,215.0] ||  -> AlwaysIntConn(U,V,W)* equal(Place(X,Y),Place(U,Y))*.
	Given clause: 222[0:MRR:107.0,216.0] || Leq3(U,V,W)*+ -> equal(Slice(V,X),Slice(U,X))*.
	Given clause: 233[0:SpR:224.1,8.0] ||  -> AlwaysIntConn(Tb3,U,V)* P(Place(W,Os3),RGreen)*.
	Given clause: 260[2:Spt:233.1] ||  -> P(Place(U,Os3),RGreen)*.
	Given clause: 261[2:SpR:134.1,260.0] || FeasiblePlace(Os3,U)* -> P(U,RGreen).
	Given clause: 240[0:SpR:224.1,7.0] ||  -> AlwaysIntConn(Ta3,U,V)* P(Place(W,Os3),RInside)*.
	Given clause: 265[3:Spt:240.1] ||  -> P(Place(U,Os3),RInside)*.
	Given clause: 266[3:SpR:134.1,265.0] || FeasiblePlace(Os3,U)* -> P(U,RInside).
	Given clause: 223[0:MRR:113.2,113.1,216.0] || Cavity(Slice(U,V),Slice(U,W))*+ -> PersistentCavity(U,X,V,W)*.
	Given clause: 244[0:SpR:224.1,176.0] ||  -> AlwaysIntConn(Ta3,U,V)* EC(Place(W,Ob3),RRed)*.
	Given clause: 276[4:Spt:244.1] ||  -> EC(Place(U,Ob3),RRed)*.
	Given clause: 277[4:SpR:134.1,276.0] || FeasiblePlace(Ob3,U)* -> EC(U,RRed).
	Given clause: 241[0:SpR:224.1,25.0] ||  -> AlwaysIntConn(Ta3,U,V)* CombinedContainer(Place(W,Ob3),RRed,RInside)*.
	Given clause: 281[5:Spt:241.1] ||  -> CombinedContainer(Place(U,Ob3),RRed,RInside)*.
	Given clause: 283[5:Res:281.0,188.0] ||  -> Region(RUnion(Place(U,Ob3),RRed))*.
	Given clause: 99[0:Inp] || AlwaysIntConn(U,V,W)*+ Leq3(U,X,V)* -> IntConn(Slice(X,W))*.
	Given clause: 289[5:Res:281.0,78.1] || Cavity(RInside,Place(U,Ob3))* -> .
	Given clause: 282[5:SpR:134.1,281.0] || FeasiblePlace(Ob3,U) -> CombinedContainer(U,RRed,RInside)*.
	Given clause: 290[5:SpR:134.1,283.0] || FeasiblePlace(Ob3,U) -> Region(RUnion(U,RRed))*.
	Given clause: 294[5:SpL:134.1,289.0] || FeasiblePlace(Ob3,U)* Cavity(RInside,U) -> .
	Given clause: 103[0:Inp] || P(U,V)*+ Cavity(V,W)* P(U,X)* Outside(X,W)* -> .
	Given clause: 242[0:SpR:224.1,58.0] ||  -> AlwaysIntConn(Ta3,U,V)* Outside(RGreen,RUnion(Place(W,Ob3),RRed))*.
	Given clause: 234[0:SpR:224.1,121.0] ||  -> AlwaysIntConn(Tb3,U,V)* P(Place(W,Os3),Slice(Tb3,X))*.
	Given clause: 313[6:Spt:234.1] ||  -> P(Place(U,Os3),Slice(Tb3,V))*.
	Given clause: 314[6:SpR:69.0,313.0] ||  -> P(Place(U,Os3),Place(Tb3,V))*.
	Given clause: 315[6:SpR:131.1,313.0] Region(U) ||  -> P(Place(V,Os3),U)*.
	Given clause: 106[0:Inp] || NoEntranceCavity(U,V,W,X)* NoExitCavity(U,V,W,X) -> PersistentCavity(U,V,W,X).
	Given clause: 316[6:SpR:134.1,313.0] || FeasiblePlace(Os3,U) -> P(U,Slice(Tb3,V))*.
	Given clause: 320[6:SpR:134.1,314.0] || FeasiblePlace(Os3,U) -> P(U,Place(Tb3,V))*.
	Given clause: 324[6:SpR:134.1,315.1] Region(U) || FeasiblePlace(Os3,V)*+ -> P(V,U)*.
	Given clause: 235[0:SpR:224.1,136.0] ||  -> AlwaysIntConn(Tb3,U,V)* SkP0(Slice(Tb3,W),Place(X,Os3))*.
	Given clause: 339[7:Spt:235.1] ||  -> SkP0(Slice(Tb3,U),Place(V,Os3))*.
	Given clause: 112[0:Inp] || EC(U,V) Cavity(W,RUnion(U,V))* -> Cavity(W,V) Cavity(W,U) CombinedContainer(U,V,W).
	Given clause: 341[7:SpR:69.0,339.0] ||  -> SkP0(Place(Tb3,U),Place(V,Os3))*.
	Given clause: 342[7:SpR:131.1,339.0] Region(U) ||  -> SkP0(U,Place(V,Os3))*.
	Given clause: 340[7:SpR:134.1,339.0] || FeasiblePlace(Os3,U) -> SkP0(Slice(Tb3,V),U)*.
	Given clause: 346[7:SpR:134.1,341.0] || FeasiblePlace(Os3,U) -> SkP0(Place(Tb3,V),U)*.
	Given clause: 116[0:Inp] || P(Slice(U,V),Slice(U,W))*+ Continuous(U,X,V) AlwaysIntConn(U,X,V) NoExitCavity(U,X,W,Y)* -> P(Slice(X,V),Slice(X,W))* O(Slice(skf4(Y,V,X,U),V),Slice(skf4(Y,V,X,U),Y))*.
	Given clause: 349[7:SpR:134.1,342.1] Region(U) || FeasiblePlace(Os3,V) -> SkP0(U,V)*.
	Given clause: 248[0:SpR:224.1,170.0] ||  -> AlwaysIntConn(Tb3,U,V)* P(Place(Tb3,Os3),Place(W,X))*.
	Given clause: 370[8:Spt:248.1] ||  -> P(Place(Tb3,Os3),Place(U,V))*.
	Given clause: 371[8:SpR:134.1,370.0] || FeasiblePlace(U,V)*+ -> P(Place(Tb3,Os3),V)*.
	Given clause: 249[0:SpR:224.1,171.0] ||  -> AlwaysIntConn(Tb3,U,V)* SkP0(Place(W,X),Place(Tb3,Os3))*.
	Given clause: 376[9:Spt:249.1] ||  -> SkP0(Place(U,V),Place(Tb3,Os3))*.
	Given clause: 259[0:Res:130.1,222.0] ||  -> AlwaysIntConn(U,V,W)* equal(Slice(X,Y),Slice(U,Y))*.
	Given clause: 377[9:SpR:134.1,376.0] || FeasiblePlace(U,V)*+ -> SkP0(V,Place(Tb3,Os3))*.
	Given clause: 392[6:SpR:259.1,313.0] ||  -> AlwaysIntConn(Tb3,U,V)* P(Place(W,Os3),Slice(X,Y))*.
	Given clause: 416[10:Spt:392.1] ||  -> P(Place(U,Os3),Slice(V,W))*.
	Given clause: 417[10:SpR:69.0,416.0] ||  -> P(Place(U,Os3),Place(V,W))*.
	Given clause: 419[10:SpR:134.1,416.0] || FeasiblePlace(Os3,U) -> P(U,Slice(V,W))*.
	Given clause: 197[0:SpL:131.1,133.0] Region(U) || IntConn(U) -> AlwaysIntConn(V,W,skf3(U,X,Y))*.
	Given clause: 423[10:SpR:134.1,417.0] || FeasiblePlace(U,V)*+ -> P(Place(W,Os3),V)*.
	Given clause: 424[10:SpR:134.1,417.0] || FeasiblePlace(Os3,U) -> P(U,Place(V,W))*.
	Given clause: 395[7:SpR:259.1,339.0] ||  -> AlwaysIntConn(Tb3,U,V)* SkP0(Slice(W,X),Place(Y,Os3))*.
	Given clause: 440[11:Spt:395.1] ||  -> SkP0(Slice(U,V),Place(W,Os3))*.
	Given clause: 442[11:SpR:69.0,440.0] ||  -> SkP0(Place(U,V),Place(W,Os3))*.
	Given clause: 291[0:Res:130.0,99.0] || Leq3(U,V,W)*+ -> Leq3(U,X,W)* IntConn(Slice(V,Y))*.
	Given clause: 441[11:SpR:134.1,440.0] || FeasiblePlace(Os3,U) -> SkP0(Slice(V,W),U)*.
	Given clause: 446[11:SpR:134.1,442.0] || FeasiblePlace(Os3,U) -> SkP0(Place(V,W),U)*.
	Given clause: 447[11:SpR:134.1,442.0] || FeasiblePlace(U,V)*+ -> SkP0(V,Place(W,Os3))*.
	Given clause: 436[10:SpR:134.1,424.1] || FeasiblePlace(U,V)*+ FeasiblePlace(Os3,W)* -> P(W,V)*.
	Given clause: 206[1:SpL:134.1,184.1] Region(U) || FeasiblePlace(V,W)*+ equal(W,U)* -> FeasiblePlace(V,U)*.
	Given clause: 455[11:SpR:134.1,446.1] || FeasiblePlace(U,V)*+ FeasiblePlace(Os3,W) -> SkP0(V,W)*.
	Given clause: 257[0:Con:247.1] ||  -> AlwaysIntConn(U,V,W)* equal(Place(X,Y),Place(Z,Y))*.
	Given clause: 462[12:Spt:257.0] ||  -> AlwaysIntConn(U,V,W)*.
	Given clause: 463[12:MRR:99.0,462.0] || Leq3(U,V,W)*+ -> IntConn(Slice(V,X))*.
	Given clause: 328[6:MRR:325.0,147.1] || Cavity(U,V)* P(Place(W,Os3),X)*+ Outside(X,V)* -> .
	Given clause: 464[12:MRR:116.2,462.0] || P(Slice(U,V),Slice(U,W))*+ Continuous(U,X,V) NoExitCavity(U,X,W,Y)* -> P(Slice(X,V),Slice(X,W))* O(Slice(skf4(Y,V,X,U),V),Slice(skf4(Y,V,X,U),Y))*.
	Given clause: 477[6:MRR:474.0,144.1] || Cavity(U,V)*+ Outside(W,V)* -> .
	Given clause: 485[6:Res:85.1,477.0] || CombinedContainer(U,V,W)* Outside(X,RUnion(U,V))*+ -> .
	Given clause: 488[6:Spt:487.0,234.0] ||  -> AlwaysIntConn(Tb3,U,V)*.
	Given clause: 183[1:MRR:125.0,180.0] ||  -> AlwaysIntConn(U,V,HPlace(W))*.
	Given clause: 136[0:Res:121.0,33.0] ||  -> SkP0(Slice(Tb3,U),Place(Tb3,Os3))*.
	Given clause: 121[0:Rew:69.0,63.0] ||  -> P(Place(Tb3,Os3),Slice(Tb3,U))*.
	Given clause: 171[0:SpR:69.0,136.0] ||  -> SkP0(Place(Tb3,U),Place(Tb3,Os3))*.
	Given clause: 170[0:SpR:69.0,121.0] ||  -> P(Place(Tb3,Os3),Place(Tb3,U))*.
	Given clause: 195[0:SpR:131.1,136.0] Region(U) ||  -> SkP0(U,Place(Tb3,Os3))*.
	Given clause: 194[0:SpR:131.1,121.0] Region(U) ||  -> P(Place(Tb3,Os3),U)*.
	Given clause: 130[0:MRR:102.0,102.1,117.0,118.0] ||  -> AlwaysIntConn(U,V,W)* Leq3(U,X,V)*.
	Given clause: 133[0:MRR:104.0,104.1,117.0,118.0] || IntConn(Slice(U,V))*+ -> AlwaysIntConn(W,X,V)*.
	Given clause: 242[0:SpR:224.1,58.0] ||  -> AlwaysIntConn(Ta3,U,V)* Outside(RGreen,RUnion(Place(W,Ob3),RRed))*.
	Given clause: 509[7:Spt:242.1] ||  -> Outside(RGreen,RUnion(Place(U,Ob3),RRed))*.
	Given clause: 510[7:SpR:134.1,509.0] || FeasiblePlace(Ob3,U) -> Outside(RGreen,RUnion(U,RRed))*.
	Given clause: 229[0:SpR:224.1,171.0] ||  -> AlwaysIntConn(U,V,W)* SkP0(Place(U,X),Place(Tb3,Os3))*.
	Given clause: 99[0:Inp] || AlwaysIntConn(U,V,W)*+ Leq3(U,X,V)* -> IntConn(Slice(X,W))*.
	Given clause: 518[6:Res:488.0,99.0] || Leq3(Tb3,U,V)*+ -> IntConn(Slice(U,W))*.
	Given clause: 228[0:SpR:224.1,170.0] ||  -> AlwaysIntConn(U,V,W)* P(Place(Tb3,Os3),Place(U,X))*.
	Given clause: 413[0:Con:391.1] ||  -> AlwaysIntConn(U,V,W)* equal(Slice(X,Y),Slice(Z,Y))*.
	Given clause: 528[8:Spt:413.0] ||  -> AlwaysIntConn(U,V,W)*.
	Given clause: 529[8:MRR:99.0,528.0] || Leq3(U,V,W)*+ -> IntConn(Slice(V,X))*.
	Given clause: 103[0:Inp] || P(U,V)*+ Cavity(V,W)* P(U,X)* Outside(X,W)* -> .
	Given clause: 308[0:MRR:305.0,147.1] || Cavity(U,V)* P(Place(Tb3,Os3),W)*+ Outside(W,V)* -> .
	Given clause: 544[0:MRR:543.0,144.1] || Cavity(U,V)*+ Outside(W,V)* -> .
	Given clause: 545[0:Res:85.1,544.0] || CombinedContainer(U,V,W)* Outside(X,RUnion(U,V))*+ -> .
	Given clause: 551[7:Spt:550.0,242.0] ||  -> AlwaysIntConn(Ta3,U,V)*.
	Given clause: 488[6:Spt:487.0,234.0] ||  -> AlwaysIntConn(Tb3,U,V)*.
	Given clause: 183[1:MRR:125.0,180.0] ||  -> AlwaysIntConn(U,V,HPlace(W))*.
	Given clause: 58[0:Inp] ||  -> Outside(RGreen,RUnion(Place(Ta3,Ob3),RRed))*.
SPASS V 3.5 
SPASS beiseite: Proof found.
Problem: inference3.dfg 
SPASS derived 391 clauses, backtracked 108 clauses, performed 14 splits and kept 394 clauses.
SPASS allocated 52659 KBytes.
SPASS spent	0:00:00.12 on the problem.
		0:00:00.02 for the input.
		0:00:00.02 for the FLOTTER CNF translation.
		0:00:00.00 for inferences.
		0:00:00.00 for the backtracking.
		0:00:00.02 for the reduction.


Here is a proof with depth 5, length 25 :
17[0:Inp] || SkP1(U,V)* -> Region(V).
25[0:Inp] ||  -> CombinedContainer(Place(Ta3,Ob3),RRed,RInside)*.
41[0:Inp] || Cavity(U,V) -> SkP1(V,U)*.
42[0:Inp] || Outside(U,V) -> SkP1(V,U)*.
58[0:Inp] ||  -> Outside(RGreen,RUnion(Place(Ta3,Ob3),RRed))*.
59[0:Inp] ||  -> Lt(U,V) Constant(U,V,W)*.
63[0:Inp] ||  -> P(Slice(Tb3,HPlace(Os3)),Slice(Tb3,U))*.
69[0:Inp] ||  -> equal(Slice(U,HPlace(V)),Place(U,V))**.
71[0:Inp] || Constant(U,V,W)* -> Lt(U,V).
85[0:Inp] || CombinedContainer(U,V,W) -> Cavity(W,RUnion(U,V))*.
100[0:Inp] Region(U) || Lt(V,W)* -> equal(Slice(V,skf3(U,V,X)),U)**.
103[0:Inp] || P(U,V)*+ Cavity(V,W)* P(U,X)* Outside(X,W)* -> .
118[0:MRR:71.0,59.1] ||  -> Lt(U,V)*.
121[0:Rew:69.0,63.0] ||  -> P(Place(Tb3,Os3),Slice(Tb3,U))*.
131[0:MRR:100.1,118.0] Region(U) ||  -> equal(Slice(V,skf3(U,V,W)),U)**.
144[0:Res:42.1,17.0] || Outside(U,V)* -> Region(U).
147[0:Res:41.1,17.0] || Cavity(U,V)* -> Region(U).
194[0:SpR:131.1,121.0] Region(U) ||  -> P(Place(Tb3,Os3),U)*.
305[0:Res:194.1,103.0] Region(U) || Cavity(U,V)* P(Place(Tb3,Os3),W)* Outside(W,V)* -> .
308[0:MRR:305.0,147.1] || Cavity(U,V)* P(Place(Tb3,Os3),W)*+ Outside(W,V)* -> .
543[0:Res:194.1,308.1] Region(U) || Cavity(V,W)* Outside(U,W)* -> .
544[0:MRR:543.0,144.1] || Cavity(U,V)*+ Outside(W,V)* -> .
545[0:Res:85.1,544.0] || CombinedContainer(U,V,W)* Outside(X,RUnion(U,V))*+ -> .
554[0:Res:58.0,545.1] || CombinedContainer(Place(Ta3,Ob3),RRed,U)* -> .
557[0:UnC:554.0,25.0] ||  -> .
Formulae used in the proof : axiom7 axiom23 axiom25 axiom36 conjecture0 axiom34 axiom37 axiom29 axiom30 axiom35

--------------------------SPASS-STOP------------------------------
